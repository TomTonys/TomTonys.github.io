<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TomTonys Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.tomtony.top/"/>
  <updated>2018-11-18T13:10:44.366Z</updated>
  <id>https://www.tomtony.top/</id>
  
  <author>
    <name>Tom Tony</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python标准异常</title>
    <link href="https://www.tomtony.top/2018/11/18/python_error_info/"/>
    <id>https://www.tomtony.top/2018/11/18/python_error_info/</id>
    <published>2018-11-18T13:10:00.000Z</published>
    <updated>2018-11-18T13:10:44.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python标准异常"><a href="#python标准异常" class="headerlink" title="python标准异常"></a>python标准异常</h1><table><thead><tr><th style="text-align:right">异常名称</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:right">BaseException</td><td style="text-align:left">所有异常的基类</td></tr><tr><td style="text-align:right">SystemExit</td><td style="text-align:left">解释器请求退出</td></tr><tr><td style="text-align:right">KeyboardInterrupt</td><td style="text-align:left">用户中断执行(通常是输入^C)</td></tr><tr><td style="text-align:right">Exception</td><td style="text-align:left">常规错误的基类</td></tr><tr><td style="text-align:right">StopIteration</td><td style="text-align:left">迭代器没有更多的值</td></tr><tr><td style="text-align:right">GeneratorExit</td><td style="text-align:left">生成器(generator)发生异常来通知退出</td></tr><tr><td style="text-align:right">StandardError</td><td style="text-align:left">所有的内建标准异常的基类</td></tr><tr><td style="text-align:right">ArithmeticError</td><td style="text-align:left">所有数值计算错误的基类</td></tr><tr><td style="text-align:right">FloatingPointError</td><td style="text-align:left">浮点计算错误</td></tr><tr><td style="text-align:right">OverflowError</td><td style="text-align:left">数值运算超出最大限制</td></tr><tr><td style="text-align:right">ZeroDivisionError</td><td style="text-align:left">除(或取模)零 (所有数据类型)</td></tr><tr><td style="text-align:right">AssertionError</td><td style="text-align:left">断言语句失败</td></tr><tr><td style="text-align:right">AttributeError</td><td style="text-align:left">对象没有这个属性</td></tr><tr><td style="text-align:right">EOFError</td><td style="text-align:left">没有内建输入,到达EOF 标记</td></tr><tr><td style="text-align:right">EnvironmentError</td><td style="text-align:left">操作系统错误的基类</td></tr><tr><td style="text-align:right">IOError</td><td style="text-align:left">输入/输出操作失败</td></tr><tr><td style="text-align:right">OSError</td><td style="text-align:left">操作系统错误</td></tr><tr><td style="text-align:right">WindowsError</td><td style="text-align:left">系统调用失败</td></tr><tr><td style="text-align:right">ImportError</td><td style="text-align:left">导入模块/对象失败</td></tr><tr><td style="text-align:right">LookupError</td><td style="text-align:left">无效数据查询的基类</td></tr><tr><td style="text-align:right">IndexError</td><td style="text-align:left">序列中没有此索引(index)</td></tr><tr><td style="text-align:right">KeyError</td><td style="text-align:left">映射中没有这个键</td></tr><tr><td style="text-align:right">MemoryError</td><td style="text-align:left">内存溢出错误(对于Python 解释器不是致命的)</td></tr><tr><td style="text-align:right">NameError</td><td style="text-align:left">未声明/初始化对象 (没有属性)</td></tr><tr><td style="text-align:right">UnboundLocalError</td><td style="text-align:left">访问未初始化的本地变量</td></tr><tr><td style="text-align:right">ReferenceError</td><td style="text-align:left">弱引用(Weak reference)试图访问已经垃圾回收了的对象</td></tr><tr><td style="text-align:right">RuntimeError</td><td style="text-align:left">一般的运行时错误</td></tr><tr><td style="text-align:right">NotImplementedError</td><td style="text-align:left">尚未实现的方法</td></tr><tr><td style="text-align:right">SyntaxError</td><td style="text-align:left">Python 语法错误</td></tr><tr><td style="text-align:right">IndentationError</td><td style="text-align:left">缩进错误</td></tr><tr><td style="text-align:right">TabError</td><td style="text-align:left">Tab 和空格混用</td></tr><tr><td style="text-align:right">SystemError</td><td style="text-align:left">一般的解释器系统错误</td></tr><tr><td style="text-align:right">TypeError</td><td style="text-align:left">对类型无效的操作</td></tr><tr><td style="text-align:right">ValueError</td><td style="text-align:left">传入无效的参数</td></tr><tr><td style="text-align:right">UnicodeError</td><td style="text-align:left">Unicode 相关的错误</td></tr><tr><td style="text-align:right">UnicodeDecodeError</td><td style="text-align:left">Unicode 解码时的错误</td></tr><tr><td style="text-align:right">UnicodeEncodeError</td><td style="text-align:left">Unicode 编码时错误</td></tr><tr><td style="text-align:right">UnicodeTranslateError</td><td style="text-align:left">Unicode 转换时错误</td></tr><tr><td style="text-align:right">Warning</td><td style="text-align:left">警告的基类</td></tr><tr><td style="text-align:right">DeprecationWarning</td><td style="text-align:left">关于被弃用的特征的警告</td></tr><tr><td style="text-align:right">FutureWarning</td><td style="text-align:left">关于构造将来语义会有改变的警告</td></tr><tr><td style="text-align:right">OverflowWarning</td><td style="text-align:left">旧的关于自动提升为长整型(long)的警告</td></tr><tr><td style="text-align:right">PendingDeprecationWarning</td><td style="text-align:left">关于特性将会被废弃的警告</td></tr><tr><td style="text-align:right">RuntimeWarning</td><td style="text-align:left">可疑的运行时行为(runtime behavior)的警告</td></tr><tr><td style="text-align:right">SyntaxWarning</td><td style="text-align:left">可疑的语法的警告</td></tr><tr><td style="text-align:right">UserWarning</td><td style="text-align:left">用户代码生成的警告</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python标准异常&quot;&gt;&lt;a href=&quot;#python标准异常&quot; class=&quot;headerlink&quot; title=&quot;python标准异常&quot;&gt;&lt;/a&gt;python标准异常&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-alig
      
    
    </summary>
    
      <category term="Python" scheme="https://www.tomtony.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://www.tomtony.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PageObject</title>
    <link href="https://www.tomtony.top/2018/11/17/PageObject/"/>
    <id>https://www.tomtony.top/2018/11/17/PageObject/</id>
    <published>2018-11-17T07:36:00.000Z</published>
    <updated>2018-11-17T11:42:22.648Z</updated>
    
    <content type="html"><![CDATA[<p>前面我们都是基于线性模型来编写测试脚本，而且元素定位方式和属性值都是写死的。在业务场景简单的情况下这样写无可厚非，但是一旦遇到产品需求变更，业务逻辑比较复杂需要维护的时候就非常麻烦，此时就需要灵活的处理方案。<br><a id="more"></a></p><h1 id="什么是PageObject"><a href="#什么是PageObject" class="headerlink" title="什么是PageObject"></a>什么是PageObject</h1><h6 id="Page-Object是Selenium自动化测试项目开发实践的最佳设计模式之一，通过对界面元素的封装减少冗余代码，同时在后期维护中，若元素定位发生变化，只需要调整页面元素封装的代码，提高测试用例的可维护性。"><a href="#Page-Object是Selenium自动化测试项目开发实践的最佳设计模式之一，通过对界面元素的封装减少冗余代码，同时在后期维护中，若元素定位发生变化，只需要调整页面元素封装的代码，提高测试用例的可维护性。" class="headerlink" title="Page Object是Selenium自动化测试项目开发实践的最佳设计模式之一，通过对界面元素的封装减少冗余代码，同时在后期维护中，若元素定位发生变化，只需要调整页面元素封装的代码，提高测试用例的可维护性。"></a>Page Object是Selenium自动化测试项目开发实践的最佳设计模式之一，通过对界面元素的封装减少冗余代码，同时在后期维护中，若元素定位发生变化，只需要调整页面元素封装的代码，提高测试用例的可维护性。</h6><h1 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h1><h6 id="将各个功能的代码封装为一个类，后面要用他时，直接调用即可"><a href="#将各个功能的代码封装为一个类，后面要用他时，直接调用即可" class="headerlink" title="将各个功能的代码封装为一个类，后面要用他时，直接调用即可"></a>将各个功能的代码封装为一个类，后面要用他时，直接调用即可</h6><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><h6 id="封装App启动配置信息-desired-caps-py"><a href="#封装App启动配置信息-desired-caps-py" class="headerlink" title="封装App启动配置信息(desired_caps.py)"></a>封装App启动配置信息(desired_caps.py)</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">import</span> logging.config</span><br><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">CON_LOG = <span class="string">'../log/log.conf'</span></span><br><span class="line">logging.config.fileConfig(CON_LOG)</span><br><span class="line">logging = logging.getLogger()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">appium_desired</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    stream = open(<span class="string">'../yaml/desired_caps.yaml'</span>, <span class="string">'r'</span>)</span><br><span class="line">    data = yaml.load(stream)</span><br><span class="line"></span><br><span class="line">    desired_caps=&#123;&#125;</span><br><span class="line">    desired_caps[<span class="string">'platformName'</span>]=data[<span class="string">'platformName'</span>]</span><br><span class="line"></span><br><span class="line">    desired_caps[<span class="string">'platformVersion'</span>]=data[<span class="string">'platformVersion'</span>]</span><br><span class="line">    desired_caps[<span class="string">'deviceName'</span>]=data[<span class="string">'deviceName'</span>]</span><br><span class="line"></span><br><span class="line">    desired_caps[<span class="string">'app'</span>]=data[<span class="string">'app'</span>]</span><br><span class="line">    desired_caps[<span class="string">'noReset'</span>]=data[<span class="string">'noReset'</span>]</span><br><span class="line"></span><br><span class="line">    desired_caps[<span class="string">'unicodeKeyboard'</span>]=data[<span class="string">'unicodeKeyboard'</span>]</span><br><span class="line">    desired_caps[<span class="string">'resetKeyboard'</span>]=data[<span class="string">'resetKeyboard'</span>]</span><br><span class="line"></span><br><span class="line">    desired_caps[<span class="string">'appPackage'</span>]=data[<span class="string">'appPackage'</span>]</span><br><span class="line">    desired_caps[<span class="string">'appActivity'</span>]=data[<span class="string">'appActivity'</span>]</span><br><span class="line"></span><br><span class="line">    logging.info(<span class="string">'start run app...'</span>)</span><br><span class="line">    driver = webdriver.Remote(<span class="string">'http://'</span>+str(data[<span class="string">'ip'</span>])+<span class="string">':'</span>+str(data[<span class="string">'port'</span>])+<span class="string">'/wd/hub'</span>, desired_caps)</span><br><span class="line"></span><br><span class="line">    driver.implicitly_wait(<span class="number">8</span>)</span><br><span class="line">    <span class="keyword">return</span> driver</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    appium_desired()</span><br></pre></td></tr></table></figure><h6 id="封装基类-baseView-py"><a href="#封装基类-baseView-py" class="headerlink" title="封装基类(baseView.py)"></a>封装基类(baseView.py)</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseView</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,driver)</span>:</span></span><br><span class="line">        self.driver=driver</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_element</span><span class="params">(self,*loc)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(*loc)</span><br></pre></td></tr></table></figure><h6 id="封装通用公共类-common-fun-py"><a href="#封装通用公共类-common-fun-py" class="headerlink" title="封装通用公共类(common_fun.py)"></a>封装通用公共类(common_fun.py)</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> appium_advance.page_object.baseView <span class="keyword">import</span> BaseView  <span class="comment">#导入刚刚封装的基类</span></span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> NoSuchElementException</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> appium_advance.page_object.desired_caps <span class="keyword">import</span> appium_desired  <span class="comment">#导入刚刚封装的app启动信息</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Common</span><span class="params">(BaseView)</span>:</span>  <span class="comment">#继承基类</span></span><br><span class="line"></span><br><span class="line">    cancelBtn=(By.ID,<span class="string">'android:id/button2'</span>)  <span class="comment">#将元素查找剃出来变为可变参数，方便后期维护</span></span><br><span class="line">    skipBtn=(By.ID,<span class="string">'com.tal.kaoyan:id/tv_skip'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_cancelBtn</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">"============check_cancelBtn==============="</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            element = self.driver.find_element(*self.cancelBtn)</span><br><span class="line">        <span class="keyword">except</span> NoSuchElementException:</span><br><span class="line">            logging.info(<span class="string">'update element is not found!'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.info(<span class="string">'click cancelBtn'</span>)</span><br><span class="line">            element.click()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_skipBtn</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">"==========check_skipBtn==========="</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            element = self.driver.find_element(*self.skipBtn)</span><br><span class="line">        <span class="keyword">except</span> NoSuchElementException:</span><br><span class="line">            logging.info(<span class="string">'skipBtn element is not found!'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.info(<span class="string">'click skipBtn'</span>)</span><br><span class="line">            element.click()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    driver=appium_desired()</span><br><span class="line">    com=Common(driver)</span><br><span class="line">    com.check_updateBtn()</span><br><span class="line">    com.check_skipBtn()</span><br></pre></td></tr></table></figure><h6 id="封装登录操作-loginView-py"><a href="#封装登录操作-loginView-py" class="headerlink" title="封装登录操作(loginView.py)"></a>封装登录操作(loginView.py)</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> appium_advance.page_object.common_fun <span class="keyword">import</span> Common  <span class="comment">#导入刚刚封装的通用公共类</span></span><br><span class="line"><span class="keyword">from</span> appium_advance.page_object.desired_caps <span class="keyword">import</span> appium_desired</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginView</span><span class="params">(Common)</span>:</span>  <span class="comment">#继承common-&gt;BaseView</span></span><br><span class="line">    username_type=(By.ID,<span class="string">'com.tal.kaoyan:id/login_email_edittext'</span>)  <span class="comment">#将元素查找剃出来变为可变参数，方便后期维护</span></span><br><span class="line">    password_type=(By.ID,<span class="string">'com.tal.kaoyan:id/login_password_edittext'</span>)</span><br><span class="line">    loginBtn=(By.ID,<span class="string">'com.tal.kaoyan:id/login_login_btn'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login_action</span><span class="params">(self,username,password)</span>:</span></span><br><span class="line">        self.check_cancelBtn()  <span class="comment">#调用继承的common的check_cancelBtn()方法</span></span><br><span class="line">        self.check_skipBtn()  <span class="comment">#调用继承的common的check_skipBtn()方法</span></span><br><span class="line"></span><br><span class="line">        logging.info(<span class="string">'===============login==============='</span>)</span><br><span class="line">        logging.info(<span class="string">'input username:%s'</span>%username)</span><br><span class="line">        self.driver.find_element(*self.username_type).send_keys(username)</span><br><span class="line"></span><br><span class="line">        logging.info(<span class="string">'input password:%s'</span>%password)</span><br><span class="line">        self.driver.find_element(*self.password_type).send_keys(password)</span><br><span class="line"></span><br><span class="line">        logging.info(<span class="string">'click loginBtn.'</span>)</span><br><span class="line">        self.driver.find_element(*self.loginBtn).click()</span><br><span class="line">        logging.info(<span class="string">'login finished '</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    driver=appium_desired()</span><br><span class="line">    l=LoginView(driver)</span><br><span class="line">    l.login_action(<span class="string">'name123'</span>,<span class="string">'pwd123'</span>)</span><br></pre></td></tr></table></figure><h3 id="unittest用例封装"><a href="#unittest用例封装" class="headerlink" title="unittest用例封装"></a>unittest用例封装</h3><h6 id="封装用例启动结束时的配置-myunit-py"><a href="#封装用例启动结束时的配置-myunit-py" class="headerlink" title="封装用例启动结束时的配置(myunit.py)"></a>封装用例启动结束时的配置(myunit.py)</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> appium_advance.page_object.desired_caps <span class="keyword">import</span> appium_desired <span class="comment">#导入刚刚封装的app启动信息</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StartEnd</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'======setUp========='</span>)</span><br><span class="line">        self.driver=appium_desired()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'======tearDown====='</span>)</span><br><span class="line">        sleep(<span class="number">5</span>)</span><br><span class="line">        self.driver.close_app()</span><br></pre></td></tr></table></figure><h6 id="测试用例封装-test-login-py"><a href="#测试用例封装-test-login-py" class="headerlink" title="测试用例封装(test_login.py)"></a>测试用例封装(test_login.py)</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span>  appium_advance.unittest.myunit <span class="keyword">import</span> StartEnd</span><br><span class="line"><span class="keyword">from</span> appium_advance.page_object.loginView <span class="keyword">import</span> LoginView</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestLogin</span><span class="params">(StartEnd)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_login_zxw2018</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'=========test_login_zxw2018============'</span>)</span><br><span class="line">        l=LoginView(self.driver)</span><br><span class="line">        l.login_action(<span class="string">'name2018'</span>,<span class="string">'pwd2018'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_login_zxw2017</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'==========test_login_zxw2017========'</span>)</span><br><span class="line">        l=LoginView(self.driver)</span><br><span class="line">        l.login_action(<span class="string">'name2017'</span>,<span class="string">'pwd2017'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_login_error</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'=======test_login_error========='</span>)</span><br><span class="line">        l=LoginView(self.driver)</span><br><span class="line">        l.login_action(<span class="string">'666'</span>,<span class="string">'222'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><p>_1.注意test开头  2.运行顺序一个test_xxx-&gt;setUp-&gt;tearDown-&gt;另一个test_xxx-&gt;…，test_xxx的顺序为xxx的默认排序，并非像线性一样从上到下的运行。_</p><h3 id="逻辑图"><a href="#逻辑图" class="headerlink" title="逻辑图"></a>逻辑图</h3><p><img src="https://s1.ax1x.com/2018/11/17/iz8g6e.png" alt="iz8g6e.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面我们都是基于线性模型来编写测试脚本，而且元素定位方式和属性值都是写死的。在业务场景简单的情况下这样写无可厚非，但是一旦遇到产品需求变更，业务逻辑比较复杂需要维护的时候就非常麻烦，此时就需要灵活的处理方案。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="appium" scheme="https://www.tomtony.top/tags/appium/"/>
    
      <category term="Python" scheme="https://www.tomtony.top/tags/Python/"/>
    
      <category term="PageObject" scheme="https://www.tomtony.top/tags/PageObject/"/>
    
  </entry>
  
  <entry>
    <title>python爬取LOL所有英雄技能信息</title>
    <link href="https://www.tomtony.top/2018/11/15/python_get_lolhero/"/>
    <id>https://www.tomtony.top/2018/11/15/python_get_lolhero/</id>
    <published>2018-11-15T09:00:00.000Z</published>
    <updated>2018-11-15T09:06:20.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工欲善其事-必先利其器"><a href="#工欲善其事-必先利其器" class="headerlink" title="工欲善其事  必先利其器"></a>工欲善其事  必先利其器</h1><h6 id="要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生"><a href="#要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生" class="headerlink" title="要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生"></a>要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生</h6><a id="more"></a><hr><h4 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h4><blockquote><p>python 3.7</p></blockquote><h4 id="此爬虫所用的库有"><a href="#此爬虫所用的库有" class="headerlink" title="此爬虫所用的库有"></a>此爬虫所用的库有</h4><blockquote><ol><li>requests (获取网页信息)</li><li>openpyxl (Excel相关操作)</li><li>pymysql (MySQL数据库相关操作)</li><li>re (正则)</li></ol></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p><em>下面有已打包为EXE的程序，可直接使用</em></p><h5 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(hero)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Referer'</span>: <span class="string">'http://lol.qq.com/web201310/info-defail.shtml?id='</span> + hero,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">'http://lol.qq.com/biz/hero/'</span> + hero + <span class="string">'.js'</span></span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    response = response.text</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hero_info</span><span class="params">(response)</span>:</span></span><br><span class="line">    <span class="comment"># 英雄名称</span></span><br><span class="line">    hero_name = re.findall(<span class="string">r'"name":"(.*?)","title"'</span>, response, re.S)[<span class="number">0</span>]</span><br><span class="line">    hero_title = re.findall(<span class="string">r'"title":"(.*?)","tags"'</span>, response, re.S)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 技能(QWER)</span></span><br><span class="line">    hero_spells = re.findall(<span class="string">r'"spells":(.*?),"passive"'</span>, response, re.S)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 技能名称</span></span><br><span class="line">    hero_spells_name = re.findall(</span><br><span class="line">        <span class="string">r'"name":"(.*?)","description"'</span>, hero_spells, re.S)</span><br><span class="line">    <span class="comment"># 技能描述</span></span><br><span class="line">    hero_spells_description = re.findall(</span><br><span class="line">        <span class="string">r'"description":"(.*?)","image"'</span>, hero_spells, re.S)</span><br><span class="line">    <span class="comment"># 技能消耗</span></span><br><span class="line">    hero_spells_resource = re.findall(</span><br><span class="line">        <span class="string">r'"resource":"(.*?)"&#125;'</span>, hero_spells, re.S)</span><br><span class="line">    <span class="comment"># 技能主被动</span></span><br><span class="line">    hero_spells_group = re.findall(<span class="string">r'"group":"(.*?)","x"'</span>, hero_spells, re.S)</span><br><span class="line">    spells_Q = hero_spells_name[<span class="number">0</span>] + <span class="string">':'</span> + hero_spells_description[<span class="number">0</span>] + \</span><br><span class="line">        <span class="string">'|'</span> + hero_spells_resource[<span class="number">0</span>] + <span class="string">'|'</span> + hero_spells_group[<span class="number">0</span>]</span><br><span class="line">    spells_W = hero_spells_name[<span class="number">1</span>] + <span class="string">':'</span> + hero_spells_description[<span class="number">1</span>] + \</span><br><span class="line">        <span class="string">'|'</span> + hero_spells_resource[<span class="number">1</span>] + <span class="string">'|'</span> + hero_spells_group[<span class="number">1</span>]</span><br><span class="line">    spells_E = hero_spells_name[<span class="number">2</span>] + <span class="string">':'</span> + hero_spells_description[<span class="number">2</span>] + \</span><br><span class="line">        <span class="string">'|'</span> + hero_spells_resource[<span class="number">2</span>] + <span class="string">'|'</span> + hero_spells_group[<span class="number">2</span>]</span><br><span class="line">    spells_R = hero_spells_name[<span class="number">3</span>] + <span class="string">':'</span> + hero_spells_description[<span class="number">3</span>] + \</span><br><span class="line">        <span class="string">'|'</span> + hero_spells_resource[<span class="number">3</span>] + <span class="string">'|'</span> + hero_spells_group[<span class="number">3</span>]</span><br><span class="line">    Spells = spells_Q + <span class="string">'\n'</span> + spells_W + <span class="string">'\n'</span> + spells_E + <span class="string">'\n'</span> + spells_R</span><br><span class="line">    <span class="comment"># 被动技能</span></span><br><span class="line">    hero_passive = re.findall(<span class="string">r'"passive":(.*?),"lore"'</span>, response, re.S)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 被动技能名称</span></span><br><span class="line">    hero_passive_name = re.findall(</span><br><span class="line">        <span class="string">r'"name":"(.*?)","description"'</span>, hero_passive, re.S)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 技能描述</span></span><br><span class="line">    hero_passive_description = re.findall(</span><br><span class="line">        <span class="string">r'"description":"(.*?)","image"'</span>, hero_passive, re.S)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 技能主被动</span></span><br><span class="line">    hero_passive_group = re.findall(</span><br><span class="line">        <span class="string">r'"group":"(.*?)","x"'</span>, hero_passive, re.S)[<span class="number">0</span>]</span><br><span class="line">    passive = hero_passive_name + <span class="string">':'</span> + \</span><br><span class="line">        hero_passive_description + <span class="string">'|'</span> + hero_passive_group</span><br><span class="line">    hero_spells_info = [hero_name, hero_title, passive, Spells]</span><br><span class="line">    <span class="keyword">return</span> hero_spells_info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hero</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'hero'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        hero = f.readlines()</span><br><span class="line">    <span class="keyword">return</span> hero</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_excel</span><span class="params">(her)</span>:</span></span><br><span class="line">    wb = openpyxl.Workbook()</span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'英雄称号'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'英雄名称'</span></span><br><span class="line">    ws[<span class="string">'C1'</span>] = <span class="string">'被动技能'</span></span><br><span class="line">    ws[<span class="string">'D1'</span>] = <span class="string">'主动技能'</span></span><br><span class="line">    <span class="keyword">for</span> hero <span class="keyword">in</span> her:</span><br><span class="line">        ws.append(hero)</span><br><span class="line">    wb.save(<span class="string">'herotest.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_mysql</span><span class="params">(her)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> her:</span><br><span class="line">        ch = <span class="string">'"'</span> + i[<span class="number">0</span>] + <span class="string">'"'</span></span><br><span class="line">        name = <span class="string">'"'</span> + i[<span class="number">1</span>] + <span class="string">'"'</span></span><br><span class="line">        bd_name = <span class="string">'"'</span> + i[<span class="number">2</span>] + <span class="string">'"'</span></span><br><span class="line">        zd_name = <span class="string">'"'</span> + i[<span class="number">3</span>] + <span class="string">'"'</span></span><br><span class="line">        db = pymysql.connect(host=<span class="string">'localhost'</span>, user=<span class="string">'root'</span>,</span><br><span class="line">                             password=<span class="string">'123456'</span>, database=<span class="string">'python_mysql'</span>, charset=<span class="string">'utf8'</span>)</span><br><span class="line">        cursor = db.cursor()</span><br><span class="line">        sql = <span class="string">''' insert into lolheroinfo values (%s, %s, %s, %s);</span></span><br><span class="line"><span class="string">        '''</span> % (ch, name, bd_name, zd_name)</span><br><span class="line">        <span class="comment"># print(sql)</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 执行sql语句</span></span><br><span class="line">            cursor.execute(sql)</span><br><span class="line">            <span class="comment"># 提交到数据库执行</span></span><br><span class="line">            db.commit()</span><br><span class="line">            print(ch, <span class="string">' insert into success!'</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            db.rollback()</span><br><span class="line"></span><br><span class="line">        db.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    heros = get_hero()</span><br><span class="line">    her = []</span><br><span class="line">    <span class="keyword">for</span> hero <span class="keyword">in</span> heros:</span><br><span class="line">        hero = hero.split(<span class="string">'"'</span>)[<span class="number">3</span>]</span><br><span class="line">        response = get_html(hero)</span><br><span class="line">        her_infos = hero_info(response)</span><br><span class="line">        her_encode = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> her_infos:</span><br><span class="line">            i = i.encode(<span class="string">"latin-1"</span>).decode(<span class="string">"unicode_escape"</span>)</span><br><span class="line">            her_encode.append(i)</span><br><span class="line">        her.append(her_encode)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    save_to_excel(her)</span><br><span class="line">    <span class="comment">#save_to_mysql(her)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h5 id="获取英雄数据文件"><a href="#获取英雄数据文件" class="headerlink" title="获取英雄数据文件"></a>获取英雄数据文件</h5><p><em>运行此文件后会在当前目录下生产hero的数据文件</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'https://lol.qq.com/data/info-defail.shtml?id=Aatrox'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">'https://lol.qq.com/biz/hero/champion.js'</span>, headers=headers)</span><br><span class="line">keys = re.findall(<span class="string">r'"keys":&#123;(.*?)&#125;,"data"'</span>,response.text,re.S)</span><br><span class="line">keys = keys[<span class="number">0</span>]</span><br><span class="line">keys = keys.split(<span class="string">','</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'hero'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">        f.write(key)</span><br><span class="line">        f.write(<span class="string">'\n'</span>)</span><br><span class="line">        print(key)</span><br></pre></td></tr></table></figure></p><p>_如果想要保存到MySQL，请先创建MySQL数据库，然后用下面的代码创建表，最后取消主代码save_to_mysql(her)的注释即可_</p><h5 id="创建数据表代码"><a href="#创建数据表代码" class="headerlink" title="创建数据表代码"></a>创建数据表代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"123456"</span>,<span class="string">"python_mysql"</span> )</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 cursor() 方法创建一个游标对象 cursor</span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 execute() 方法执行 SQL，如果表存在则删除</span></span><br><span class="line">cursor.execute(<span class="string">"DROP TABLE IF EXISTS EMPLOYEE"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用预处理语句创建表</span></span><br><span class="line">sql = <span class="string">"""CREATE TABLE lolheroinfo (</span></span><br><span class="line"><span class="string">         英雄称号  CHAR(255),</span></span><br><span class="line"><span class="string">         英雄名称 CHAR(255),  </span></span><br><span class="line"><span class="string">         被动技能 CHAR(255),</span></span><br><span class="line"><span class="string">         主动技能 varchar(999)</span></span><br><span class="line"><span class="string">         )</span></span><br><span class="line"><span class="string">         """</span></span><br><span class="line"> </span><br><span class="line">cursor.execute(sql)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 关闭数据库连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>Excel版：<br><img src="https://s1.ax1x.com/2018/11/15/ivSn76.jpg" alt="ivSn76.jpg"><br>MySQL版：<br><img src="https://s1.ax1x.com/2018/11/15/ivSm0x.jpg" alt="ivSm0x.jpg"><br>下面是上文代码打包为EXE版(pyinstaller)<br>主文件(Excel版)：<a href="https://www.lanzous.com/i2dnmvg" target="_blank" rel="noopener">https://www.lanzous.com/i2dnmvg</a><br>主文件(MySQL版)：<a href="https://www.lanzous.com/i2dnmej" target="_blank" rel="noopener">https://www.lanzous.com/i2dnmej</a><br>数据文件：<a href="https://www.lanzous.com/i2dnn9a" target="_blank" rel="noopener">https://www.lanzous.com/i2dnn9a</a><br>获取数据文件：<a href="https://www.lanzous.com/i2dnm7c" target="_blank" rel="noopener">https://www.lanzous.com/i2dnm7c</a></p><p><strong>最后温馨提示请合理使用爬虫</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;工欲善其事-必先利其器&quot;&gt;&lt;a href=&quot;#工欲善其事-必先利其器&quot; class=&quot;headerlink&quot; title=&quot;工欲善其事  必先利其器&quot;&gt;&lt;/a&gt;工欲善其事  必先利其器&lt;/h1&gt;&lt;h6 id=&quot;要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生&quot;&gt;&lt;a href=&quot;#要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生&quot; class=&quot;headerlink&quot; title=&quot;要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生&quot;&gt;&lt;/a&gt;要想玩好LOL，那了解所有英雄的技能必然是其最基本的。所以此爬虫就应运而生&lt;/h6&gt;
    
    </summary>
    
      <category term="Python" scheme="https://www.tomtony.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://www.tomtony.top/tags/Python/"/>
    
      <category term="LOL" scheme="https://www.tomtony.top/tags/LOL/"/>
    
  </entry>
  
  <entry>
    <title>faces</title>
    <link href="https://www.tomtony.top/2018/11/11/faces/"/>
    <id>https://www.tomtony.top/2018/11/11/faces/</id>
    <published>2018-11-11T02:19:00.000Z</published>
    <updated>2018-11-11T12:20:35.308Z</updated>
    
    <content type="html"><![CDATA[<h1 id="faces人脸识别"><a href="#faces人脸识别" class="headerlink" title="faces人脸识别"></a>faces人脸识别</h1><h6 id="能用来进行人脸识别的库有很多，而本篇文章介绍利用Python-OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。"><a href="#能用来进行人脸识别的库有很多，而本篇文章介绍利用Python-OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。" class="headerlink" title="能用来进行人脸识别的库有很多，而本篇文章介绍利用Python+OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。"></a>能用来进行人脸识别的库有很多，而本篇文章介绍利用Python+OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。</h6><a id="more"></a><h2 id="OpenCV简单介绍"><a href="#OpenCV简单介绍" class="headerlink" title="OpenCV简单介绍"></a>OpenCV简单介绍</h2><h6 id="OpenCV的全称是Open-Source-Computer-Vision-Library，是一个跨平台的计算机视觉库。OpenCV是由英特尔公司发起并参与开发，以BSD许可证授权发行，可以在商业和研究领域中免费使用。OpenCV可用于开发实时的图像处理、计算机视觉以及模式识别程序。该程序库也可以使用英特尔公司的IPP进行加速处理。支持C、C-、Python、Java等。"><a href="#OpenCV的全称是Open-Source-Computer-Vision-Library，是一个跨平台的计算机视觉库。OpenCV是由英特尔公司发起并参与开发，以BSD许可证授权发行，可以在商业和研究领域中免费使用。OpenCV可用于开发实时的图像处理、计算机视觉以及模式识别程序。该程序库也可以使用英特尔公司的IPP进行加速处理。支持C、C-、Python、Java等。" class="headerlink" title="OpenCV的全称是Open Source Computer Vision Library，是一个跨平台的计算机视觉库。OpenCV是由英特尔公司发起并参与开发，以BSD许可证授权发行，可以在商业和研究领域中免费使用。OpenCV可用于开发实时的图像处理、计算机视觉以及模式识别程序。该程序库也可以使用英特尔公司的IPP进行加速处理。支持C、C++、Python、Java等。"></a>OpenCV的全称是Open Source Computer Vision Library，是一个跨平台的计算机视觉库。OpenCV是由英特尔公司发起并参与开发，以BSD许可证授权发行，可以在商业和研究领域中免费使用。OpenCV可用于开发实时的图像处理、计算机视觉以及模式识别程序。该程序库也可以使用英特尔公司的IPP进行加速处理。支持C、C++、Python、Java等。</h6><h2 id="下载OpenCV库"><a href="#下载OpenCV库" class="headerlink" title="下载OpenCV库"></a>下载OpenCV库</h2><h6 id="pip-install-opencv-python"><a href="#pip-install-opencv-python" class="headerlink" title="pip install opencv-python"></a><code>pip install opencv-python</code></h6><p><em>Python 2.7是2.x系列中唯一受支持的版本。Python 3.x版本遵循Numpy版本。目前支持的Python版本有2.7、3.4~3.7。</em></p><h2 id="利用OpenCV读取图片并显示"><a href="#利用OpenCV读取图片并显示" class="headerlink" title="利用OpenCV读取图片并显示"></a>利用OpenCV读取图片并显示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line">img=cv.imread(<span class="string">"404.png"</span>)</span><br><span class="line">cv.imshow(<span class="string">"pic"</span>,img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/11/11/iqqluQ.jpg" alt="iqqluQ.jpg"></p><h2 id="利用OpenCV获取PC摄像头并显示"><a href="#利用OpenCV获取PC摄像头并显示" class="headerlink" title="利用OpenCV获取PC摄像头并显示"></a>利用OpenCV获取PC摄像头并显示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plot</span><br><span class="line"><span class="comment"># 摄像头对象</span></span><br><span class="line">cap = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">    ret, frame = cap.read()  <span class="comment"># 读取一帧的图像</span></span><br><span class="line">    cv2.namedWindow(<span class="string">"camera"</span>, <span class="number">0</span>)  <span class="comment"># 0使其可以任意拖动窗口大小</span></span><br><span class="line">    cv2.imshow(<span class="string">"camera"</span>, frame)  <span class="comment"># 显示图像</span></span><br><span class="line">    <span class="keyword">if</span>(cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == ord(<span class="string">'q'</span>)):  <span class="comment">#设置按q退出</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cap.release()  <span class="comment">#释放摄像头</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/11/11/iqqMjg.jpg" alt="iqqMjg.jpg"></p><h2 id="利用OpenCV读取图片并识别人脸"><a href="#利用OpenCV读取图片并识别人脸" class="headerlink" title="利用OpenCV读取图片并识别人脸"></a>利用OpenCV读取图片并识别人脸</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 待检测的图片路径</span></span><br><span class="line">imagepath=<span class="string">"3.jpg"</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">  image = cv2.imread(imagepath)</span><br><span class="line">  gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">  <span class="string">'''</span></span><br><span class="line"><span class="string">  # 获取人脸识别训练数据</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  对于人脸特征的一些描述，opencv在读取完数据后很据训练中的样品数据，</span></span><br><span class="line"><span class="string">  就可以感知读取到的图片上的特征，进而对图片进行人脸识别。</span></span><br><span class="line"><span class="string">  xml数据下载，</span></span><br><span class="line"><span class="string">  参考：https://github.com/opencv/opencv/tree/master/data/haarcascades</span></span><br><span class="line"><span class="string">  '''</span></span><br><span class="line">  face_cascade = cv2.CascadeClassifier(<span class="string">r'./haarcascade_frontalface_default.xml'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 探测人脸</span></span><br><span class="line">  <span class="comment"># 根据训练的数据来对新图片进行识别的过程。</span></span><br><span class="line">  faces = face_cascade.detectMultiScale(</span><br><span class="line">    gray,</span><br><span class="line">    scaleFactor = <span class="number">1.15</span>,</span><br><span class="line">    minNeighbors = <span class="number">3</span>,</span><br><span class="line">    minSize = (<span class="number">5</span>,<span class="number">5</span>),</span><br><span class="line">    <span class="comment">#flags = cv2.HAAR_SCALE_IMAGE</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 我们可以随意的指定里面参数的值，来达到不同精度下的识别。返回值就是opencv对图片的探测结果的体现。</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 处理人脸探测的结果</span></span><br><span class="line">  <span class="comment">#print ("发现&#123;0&#125;个人脸!".format(len(faces)))</span></span><br><span class="line">  <span class="keyword">for</span>(x,y,w,h) <span class="keyword">in</span> faces:</span><br><span class="line">      cv2.rectangle(image,(x,y),(x+w,y+w),(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>)  <span class="comment"># 用矩形圈出人脸</span></span><br><span class="line">      <span class="comment"># cv2.circle(image,((x+x+w)/2,(y+y+h)/2),w/2,(0,255,0),2)  #用圆形圈出人脸</span></span><br><span class="line"></span><br><span class="line">  cv2.imshow(<span class="string">"image | &#123;0&#125; faces were found!"</span>.format(len(faces)),image)</span><br><span class="line">  <span class="keyword">if</span>(cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == ord(<span class="string">'q'</span>)):</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/11/11/iqq1Bj.jpg" alt="iqq1Bj.jpg"></p><h2 id="利用OpenCV获取PC摄像头实时识别人脸并显示"><a href="#利用OpenCV获取PC摄像头实时识别人脸并显示" class="headerlink" title="利用OpenCV获取PC摄像头实时识别人脸并显示"></a>利用OpenCV获取PC摄像头实时识别人脸并显示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">cap = cv2.VideoCapture(<span class="number">0</span>) <span class="comment"># 使用第0个摄像头</span></span><br><span class="line">face_cascade = cv2.CascadeClassifier(<span class="string">r'./haarcascade_frontalface_default.xml'</span>) <span class="comment"># 加载人脸特征库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">    ret, frame = cap.read() <span class="comment"># 读取一帧的图像</span></span><br><span class="line">    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY) <span class="comment"># 转灰</span></span><br><span class="line"></span><br><span class="line">    faces = face_cascade.detectMultiScale(gray, scaleFactor = <span class="number">1.15</span>, minNeighbors = <span class="number">5</span>, minSize = (<span class="number">5</span>, <span class="number">5</span>)) <span class="comment"># 检测人脸</span></span><br><span class="line">    <span class="keyword">for</span>(x, y, w, h) <span class="keyword">in</span> faces:</span><br><span class="line">        cv2.rectangle(gray, (x, y), (x + w, y + h), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>) <span class="comment"># 用矩形圈出人脸</span></span><br><span class="line"></span><br><span class="line">    cv2.imshow(<span class="string">'Face Recognition'</span>, gray)</span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == ord(<span class="string">'q'</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">cap.release() <span class="comment"># 释放摄像头</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/11/11/iqqKgS.jpg" alt="iqqKgS.jpg"><br><em>可以不用转灰，但环境复杂时，识别率会降低</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;faces人脸识别&quot;&gt;&lt;a href=&quot;#faces人脸识别&quot; class=&quot;headerlink&quot; title=&quot;faces人脸识别&quot;&gt;&lt;/a&gt;faces人脸识别&lt;/h1&gt;&lt;h6 id=&quot;能用来进行人脸识别的库有很多，而本篇文章介绍利用Python-OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。&quot;&gt;&lt;a href=&quot;#能用来进行人脸识别的库有很多，而本篇文章介绍利用Python-OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。&quot; class=&quot;headerlink&quot; title=&quot;能用来进行人脸识别的库有很多，而本篇文章介绍利用Python+OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。&quot;&gt;&lt;/a&gt;能用来进行人脸识别的库有很多，而本篇文章介绍利用Python+OpenCV来进行人脸识别，包括图片的人脸以及摄像头实时人脸。&lt;/h6&gt;
    
    </summary>
    
      <category term="Python" scheme="https://www.tomtony.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://www.tomtony.top/tags/Python/"/>
    
      <category term="faces" scheme="https://www.tomtony.top/tags/faces/"/>
    
      <category term="opencv" scheme="https://www.tomtony.top/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>日志收集-logging</title>
    <link href="https://www.tomtony.top/2018/10/31/logging/"/>
    <id>https://www.tomtony.top/2018/10/31/logging/</id>
    <published>2018-10-31T09:31:00.000Z</published>
    <updated>2018-10-31T14:17:37.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="logging"><a href="#logging" class="headerlink" title="logging"></a>logging</h1><h3 id="日志作用"><a href="#日志作用" class="headerlink" title="日志作用"></a>日志作用</h3><h6 id="不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。"><a href="#不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。" class="headerlink" title="不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。"></a>不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。</h6><a id="more"></a><h3 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h3><h6 id="CRITICAL-gt-ERROR-gt-WARNING-gt-INFO-gt-DEBUG"><a href="#CRITICAL-gt-ERROR-gt-WARNING-gt-INFO-gt-DEBUG" class="headerlink" title="CRITICAL &gt; ERROR &gt; WARNING &gt; INFO &gt; DEBUG"></a>CRITICAL &gt; ERROR &gt; WARNING &gt; INFO &gt; DEBUG</h6><h6 id="DEBUG：调试信息，也是最详细的日志信息"><a href="#DEBUG：调试信息，也是最详细的日志信息" class="headerlink" title="DEBUG：调试信息，也是最详细的日志信息"></a>DEBUG：调试信息，也是最详细的日志信息</h6><h6 id="INFO：证明事情按预期工作"><a href="#INFO：证明事情按预期工作" class="headerlink" title="INFO：证明事情按预期工作"></a>INFO：证明事情按预期工作</h6><h6 id="WARNING：表面发生了一些意外，或者不久的将来会发生问题-如-磁盘满了-。软件还是在正常工作"><a href="#WARNING：表面发生了一些意外，或者不久的将来会发生问题-如-磁盘满了-。软件还是在正常工作" class="headerlink" title="WARNING：表面发生了一些意外，或者不久的将来会发生问题(如:磁盘满了)。软件还是在正常工作"></a>WARNING：表面发生了一些意外，或者不久的将来会发生问题(如:磁盘满了)。软件还是在正常工作</h6><h6 id="ERROR：由于更严重的问题，软件已经不能执行一些功能了"><a href="#ERROR：由于更严重的问题，软件已经不能执行一些功能了" class="headerlink" title="ERROR：由于更严重的问题，软件已经不能执行一些功能了"></a>ERROR：由于更严重的问题，软件已经不能执行一些功能了</h6><h6 id="CRITICAL-严重错误，表面软件已经不能继续运行了"><a href="#CRITICAL-严重错误，表面软件已经不能继续运行了" class="headerlink" title="CRITICAL:严重错误，表面软件已经不能继续运行了"></a>CRITICAL:严重错误，表面软件已经不能继续运行了</h6><h3 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h3><h6 id="一般为时间-模块-行数-日志具体信息的内容格式"><a href="#一般为时间-模块-行数-日志具体信息的内容格式" class="headerlink" title="一般为时间+模块+行数+日志具体信息的内容格式"></a>一般为时间+模块+行数+日志具体信息的内容格式</h6><p><img src="https://s1.ax1x.com/2018/10/31/iWpu6I.md.jpg" alt="iWpu6I.md.jpg"></p><h3 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h3><h6 id="一个项目中会有很多的日志采集点，而日志采集点必须结合业务属性来设置。比如在登录代码执行前可以插入“准备登录-”日志信息-如果登录完成之后，再设置登录的提示日志就会给人造成误解，无法判断到底是登录之前的问题还是登录之后的问题，因此日志采集点的位置很重要。"><a href="#一个项目中会有很多的日志采集点，而日志采集点必须结合业务属性来设置。比如在登录代码执行前可以插入“准备登录-”日志信息-如果登录完成之后，再设置登录的提示日志就会给人造成误解，无法判断到底是登录之前的问题还是登录之后的问题，因此日志采集点的位置很重要。" class="headerlink" title="一个项目中会有很多的日志采集点，而日志采集点必须结合业务属性来设置。比如在登录代码执行前可以插入“准备登录..”日志信息,如果登录完成之后，再设置登录的提示日志就会给人造成误解，无法判断到底是登录之前的问题还是登录之后的问题，因此日志采集点的位置很重要。"></a>一个项目中会有很多的日志采集点，而日志采集点必须结合业务属性来设置。比如在登录代码执行前可以插入“准备登录..”日志信息,如果登录完成之后，再设置登录的提示日志就会给人造成误解，无法判断到底是登录之前的问题还是登录之后的问题，因此日志采集点的位置很重要。</h6><h3 id="logging用法"><a href="#logging用法" class="headerlink" title="logging用法"></a>logging用法</h3><p><a href="https://docs.python.org/3.5/library/logging.html?" target="_blank" rel="noopener">logging模块官方文档</a></p><h5 id="basicConfig-kwargs-为日志记录系统做基本配置"><a href="#basicConfig-kwargs-为日志记录系统做基本配置" class="headerlink" title="basicConfig(**kwargs) 为日志记录系统做基本配置"></a>basicConfig(**kwargs) 为日志记录系统做基本配置</h5><h5 id="部分参数"><a href="#部分参数" class="headerlink" title="部分参数"></a>部分参数</h5><ul><li><h6 id="filename-指定日志文件名称"><a href="#filename-指定日志文件名称" class="headerlink" title="filename 指定日志文件名称"></a>filename 指定日志文件名称</h6></li><li><h6 id="filemode-指定打开文件的模式，如果指定了filename（如果文件模式未指定，则默认为’a）"><a href="#filemode-指定打开文件的模式，如果指定了filename（如果文件模式未指定，则默认为’a）" class="headerlink" title="filemode 指定打开文件的模式，如果指定了filename（如果文件模式未指定，则默认为’a）"></a>filemode 指定打开文件的模式，如果指定了filename（如果文件模式未指定，则默认为’a）</h6></li><li><h6 id="format-为处理程序使用指定的格式字符串。"><a href="#format-为处理程序使用指定的格式字符串。" class="headerlink" title="format 为处理程序使用指定的格式字符串。"></a>format 为处理程序使用指定的格式字符串。</h6><img src="https://s1.ax1x.com/2018/10/31/iWpUcn.md.jpg" alt="iWpUcn.md.jpg"></li><li><h6 id="level-将根记录器级别设置为指定级别。-仅会显示指定级别以及比它更严重的级别。如level-logging-ERROR，则仅会显示ERROR和CRITICAL级别的日志"><a href="#level-将根记录器级别设置为指定级别。-仅会显示指定级别以及比它更严重的级别。如level-logging-ERROR，则仅会显示ERROR和CRITICAL级别的日志" class="headerlink" title="level 将根记录器级别设置为指定级别。(仅会显示指定级别以及比它更严重的级别。如level=logging.ERROR，则仅会显示ERROR和CRITICAL级别的日志)"></a>level 将根记录器级别设置为指定级别。(仅会显示指定级别以及比它更严重的级别。如level=logging.ERROR，则仅会显示ERROR和CRITICAL级别的日志)</h6><h5 id="事例用法"><a href="#事例用法" class="headerlink" title="事例用法"></a>事例用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(level=logging.DEBUG,</span><br><span class="line">        filename=<span class="string">'runlog.log'</span>,</span><br><span class="line">        format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,</span><br><span class="line">        filemode=<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line">logging.debug(<span class="string">'debug info'</span>)</span><br><span class="line">logging.info(<span class="string">'info inof'</span>)</span><br><span class="line">logging.warning(<span class="string">'warning info'</span>)</span><br><span class="line">logging.error(<span class="string">'error info'</span>)</span><br><span class="line">logging.critical(<span class="string">'critical info'</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例:"></a>实例:</h3><p><em>将之前<a href="https://www.tomtony.top/2018/10/26/yaml/">yaml</a>的代码加上logging</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'device_info.yaml'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = yaml.load(file)</span><br><span class="line">desired_caps = &#123;&#125;</span><br><span class="line">desired_caps[<span class="string">'platformName'</span>] = data[<span class="string">'platformName'</span>]</span><br><span class="line">desired_caps[<span class="string">'platforVersion'</span>] = data[<span class="string">'platforVersion'</span>]</span><br><span class="line">desired_caps[<span class="string">'deviceName'</span>] = data[<span class="string">'deviceName'</span>]</span><br><span class="line">desired_caps[<span class="string">'app'</span>] = data[<span class="string">'app'</span>]</span><br><span class="line">desired_caps[<span class="string">'appPackage'</span>] = data[<span class="string">'appPackage'</span>]</span><br><span class="line">desired_caps[<span class="string">'appActivity'</span>] = data[<span class="string">'appActivity'</span>]</span><br><span class="line">desired_caps[<span class="string">'noReset'</span>] = data[<span class="string">'noReset'</span>]</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                    filename=<span class="string">'runlog.log'</span>,</span><br><span class="line">                    format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,</span><br><span class="line">                    filemode=<span class="string">'a'</span>)</span><br><span class="line">logging.info(<span class="string">'start app...'</span>)</span><br><span class="line">driver = webdriver.Remote(</span><br><span class="line">    <span class="string">'http://'</span> + str(data[<span class="string">'ip'</span>]) + <span class="string">':'</span> + str(data[<span class="string">'port'</span>]) + <span class="string">'/wd/hub'</span>, desired_caps)</span><br><span class="line">logging.info(<span class="string">'Skip startup page...'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.baidu.BaiduMap:id/dj2'</span>).click()</span><br><span class="line">logging.info(<span class="string">'Close Xiaodu...'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.baidu.BaiduMap:id/byo'</span>).click()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;logging&quot;&gt;&lt;a href=&quot;#logging&quot; class=&quot;headerlink&quot; title=&quot;logging&quot;&gt;&lt;/a&gt;logging&lt;/h1&gt;&lt;h3 id=&quot;日志作用&quot;&gt;&lt;a href=&quot;#日志作用&quot; class=&quot;headerlink&quot; title=&quot;日志作用&quot;&gt;&lt;/a&gt;日志作用&lt;/h3&gt;&lt;h6 id=&quot;不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。&quot;&gt;&lt;a href=&quot;#不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。&quot; class=&quot;headerlink&quot; title=&quot;不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。&quot;&gt;&lt;/a&gt;不管是在项目开发还是测试过程中，项目运行一旦出现问题日志信息就非常重要了。日志是定位问题的重要手段，就像侦探人员要根据现场留下的线索来推断案情。&lt;/h6&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="appium" scheme="https://www.tomtony.top/tags/appium/"/>
    
      <category term="logging" scheme="https://www.tomtony.top/tags/logging/"/>
    
      <category term="日志" scheme="https://www.tomtony.top/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>yaml</title>
    <link href="https://www.tomtony.top/2018/10/26/yaml/"/>
    <id>https://www.tomtony.top/2018/10/26/yaml/</id>
    <published>2018-10-26T09:10:00.000Z</published>
    <updated>2018-10-26T09:16:25.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h1><h3 id="当一个Python用例写完了后，要更改数据时-如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。"><a href="#当一个Python用例写完了后，要更改数据时-如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。" class="headerlink" title="当一个Python用例写完了后，要更改数据时(如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。"></a>当一个Python用例写完了后，要更改数据时(如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。</h3><a id="more"></a><hr><h3 id="yaml介绍"><a href="#yaml介绍" class="headerlink" title="yaml介绍"></a>yaml介绍</h3><h4 id="YAML是”YAML-Ain’t-a-Markup-Language”（YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML-的意思其实是：”Yet-Another-Markup-Language”（仍是一种标记语言），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名。-来自维基百科"><a href="#YAML是”YAML-Ain’t-a-Markup-Language”（YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML-的意思其实是：”Yet-Another-Markup-Language”（仍是一种标记语言），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名。-来自维基百科" class="headerlink" title="YAML是”YAML Ain’t a Markup Language”（YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名。(来自维基百科)"></a>YAML是”YAML Ain’t a Markup Language”（YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名。(来自维基百科)</h4><h3 id="yaml基本用法"><a href="#yaml基本用法" class="headerlink" title="yaml基本用法"></a>yaml基本用法</h3><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">platformName: Android</span><br><span class="line">platforVersion: 5.1.1</span><br><span class="line">...</span><br></pre></td></tr></table></figure></blockquote><h3 id="yaml注意事项"><a href="#yaml注意事项" class="headerlink" title="yaml注意事项"></a>yaml注意事项</h3><h4 id="1-冒号-后要空一格"><a href="#1-冒号-后要空一格" class="headerlink" title="1. 冒号(:)后要空一格"></a>1. 冒号(:)后要空一格</h4><h4 id="2-yaml不支持tab缩进，支持空格缩进，将同级对齐就好"><a href="#2-yaml不支持tab缩进，支持空格缩进，将同级对齐就好" class="headerlink" title="2. yaml不支持tab缩进，支持空格缩进，将同级对齐就好"></a>2. yaml不支持tab缩进，支持空格缩进，将同级对齐就好</h4><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name: Tom Smith</span><br><span class="line">age: 37</span><br><span class="line">spouse:</span><br><span class="line">  name: Jane Smith</span><br><span class="line">  age: 27</span><br></pre></td></tr></table></figure></blockquote><h4 id="3-在yaml里，用-做注释"><a href="#3-在yaml里，用-做注释" class="headerlink" title="3. 在yaml里，用#做注释"></a>3. 在yaml里，用#做注释</h4><h3 id="Python读取yaml"><a href="#Python读取yaml" class="headerlink" title="Python读取yaml"></a>Python读取yaml</h3><h4 id="Python读取yaml的数据时，需要导入yaml，读取时用yaml-load-读取，具体代码如下："><a href="#Python读取yaml的数据时，需要导入yaml，读取时用yaml-load-读取，具体代码如下：" class="headerlink" title="Python读取yaml的数据时，需要导入yaml，读取时用yaml.load()读取，具体代码如下："></a>Python读取yaml的数据时，需要导入yaml，读取时用yaml.load()读取，具体代码如下：</h4><blockquote><h5 id="yaml文件"><a href="#yaml文件" class="headerlink" title="yaml文件"></a>yaml文件</h5><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">platformName: Android</span><br><span class="line">platforVersion: 5.1.1</span><br><span class="line">deviceName: 127.0.0.1:62026</span><br><span class="line">app: H:\TestLearning\com.baidu.BaiduMap.apk</span><br><span class="line">appPackage: com.baidu.BaiduMap</span><br><span class="line">appActivity: com.baidu.baidumaps.WelcomeScreen</span><br><span class="line">noReset: False</span><br><span class="line">ip: 127.0.0.1</span><br><span class="line">port: 4723</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><h5 id="Python读取"><a href="#Python读取" class="headerlink" title="Python读取"></a>Python读取</h5><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'device_info.yaml'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = yaml.load(file)</span><br><span class="line">desired_caps = &#123;&#125;</span><br><span class="line">desired_caps[<span class="string">'platformName'</span>] = data[<span class="string">'platformName'</span>]</span><br><span class="line">desired_caps[<span class="string">'platforVersion'</span>] = data[<span class="string">'platforVersion'</span>]</span><br><span class="line">desired_caps[<span class="string">'deviceName'</span>] = data[<span class="string">'deviceName'</span>]</span><br><span class="line">desired_caps[<span class="string">'app'</span>] = data[<span class="string">'app'</span>]</span><br><span class="line">desired_caps[<span class="string">'appPackage'</span>] = data[<span class="string">'appPackage'</span>]</span><br><span class="line">desired_caps[<span class="string">'appActivity'</span>] = data[<span class="string">'appActivity'</span>]</span><br><span class="line">desired_caps[<span class="string">'noReset'</span>] = data[<span class="string">'noReset'</span>]</span><br><span class="line"></span><br><span class="line">driver = webdriver.Remote(<span class="string">'http://'</span> + str(data[<span class="string">'ip'</span>]) + <span class="string">':'</span> + str(data[<span class="string">'port'</span>]) + <span class="string">'/wd/hub'</span>, desired_caps)</span><br></pre></td></tr></table></figure></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;yaml&quot;&gt;&lt;a href=&quot;#yaml&quot; class=&quot;headerlink&quot; title=&quot;yaml&quot;&gt;&lt;/a&gt;yaml&lt;/h1&gt;&lt;h3 id=&quot;当一个Python用例写完了后，要更改数据时-如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。&quot;&gt;&lt;a href=&quot;#当一个Python用例写完了后，要更改数据时-如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。&quot; class=&quot;headerlink&quot; title=&quot;当一个Python用例写完了后，要更改数据时(如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。&quot;&gt;&lt;/a&gt;当一个Python用例写完了后，要更改数据时(如换一台设备），就需要去改Python代码，但改Python代码就容易将其他代码改错。所以这里就将常用数据用yaml来存储，需要更改时直接更改yaml文件就行了。&lt;/h3&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="yaml" scheme="https://www.tomtony.top/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>Python将图片转化ASCII</title>
    <link href="https://www.tomtony.top/2018/10/26/Python%E5%B0%86%E5%9B%BE%E5%83%8F%E8%BD%AC%E5%8C%96%E4%B8%BAasci/"/>
    <id>https://www.tomtony.top/2018/10/26/Python将图像转化为asci/</id>
    <published>2018-10-26T05:57:00.000Z</published>
    <updated>2018-10-26T09:16:31.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用Python将图片转化ASCII"><a href="#用Python将图片转化ASCII" class="headerlink" title="用Python将图片转化ASCII"></a>用Python将图片转化ASCII</h1><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><h6 id="将彩图转化为灰度模式-去掉颜色-，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像"><a href="#将彩图转化为灰度模式-去掉颜色-，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像" class="headerlink" title="将彩图转化为灰度模式(去掉颜色)，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像"></a>将彩图转化为灰度模式(去掉颜色)，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像</h6><a id="more"></a><hr><h3 id="环境-我的环境"><a href="#环境-我的环境" class="headerlink" title="环境(我的环境)"></a>环境(我的环境)</h3><blockquote><h6 id="1-python3-7"><a href="#1-python3-7" class="headerlink" title="1. python3.7"></a>1. python3.7</h6><h6 id="2-Pillow库"><a href="#2-Pillow库" class="headerlink" title="2. Pillow库"></a>2. Pillow库</h6><h6 id="注意-Pillow库与PIL库不可存在于同一环境"><a href="#注意-Pillow库与PIL库不可存在于同一环境" class="headerlink" title="注意:Pillow库与PIL库不可存在于同一环境"></a><em>注意:Pillow库与PIL库不可存在于同一环境</em></h6><h6 id="3-图片"><a href="#3-图片" class="headerlink" title="3. 图片"></a>3. 图片</h6><p><img src="https://s1.ax1x.com/2018/10/26/iyxRP0.md.png" alt="iyxRP0.md.png"></p></blockquote><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><blockquote><h5 id="1-导入Pillow库"><a href="#1-导入Pillow库" class="headerlink" title="1. 导入Pillow库"></a>1. 导入Pillow库</h5><blockquote><p><code>from PIL import Image</code></p></blockquote><h5 id="2-读取图片并将其转换为灰度模式-去色"><a href="#2-读取图片并将其转换为灰度模式-去色" class="headerlink" title="2. 读取图片并将其转换为灰度模式(去色)"></a>2. 读取图片并将其转换为灰度模式(去色)</h5><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">img = Image.open(<span class="string">"tomtony.png"</span>)</span><br><span class="line">img_gray = img.convert(<span class="string">"L"</span>)</span><br><span class="line">img_gray.show()</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><blockquote><p><img src="https://s1.ax1x.com/2018/10/26/iyx5MF.md.jpg" alt="iyx5MF.md.jpg"></p></blockquote><h5 id="3-重置图片大小"><a href="#3-重置图片大小" class="headerlink" title="3. 重置图片大小"></a>3. 重置图片大小</h5><blockquote><p><code>img_gray = img_gray.resize((int(img_gray[0] * 0.5), int(img_gray[1] * 0.5)))</code><br><em>0.5为缩放大小可随意修改</em></p></blockquote><h5 id="4-根据灰度值转化为ASCII"><a href="#4-根据灰度值转化为ASCII" class="headerlink" title="4. 根据灰度值转化为ASCII"></a>4. 根据灰度值转化为ASCII</h5><blockquote><p><em>灰度模式的图像它每个像素有一个灰度值，这个值的范围是 0 ~ 255，它的值越小说明它越黑(0是纯黑色，255是纯白色)</em></p><h6 id="获取灰度值"><a href="#获取灰度值" class="headerlink" title="获取灰度值"></a>获取灰度值</h6><blockquote><p><code>img_gray.getpixel(100, 100)</code><br><em>图像在100*100这个像素的灰度值</em></p></blockquote><h6 id="根据灰度值将图像转化为asci"><a href="#根据灰度值将图像转化为asci" class="headerlink" title="根据灰度值将图像转化为asci"></a>根据灰度值将图像转化为asci</h6><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">asciis = <span class="string">"@%#*+=-:. "</span></span><br><span class="line">texts = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> range(height):</span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> range(width):</span><br><span class="line">        gray = img_gray.getpixel((col, row))</span><br><span class="line">        texts += asciis[int(gray / <span class="number">255</span> * <span class="number">9</span>)] <span class="comment"># 根据灰度值选择不同复杂度的 ASCII 字符</span></span><br><span class="line">    texts += <span class="string">'\n'</span></span><br></pre></td></tr></table></figure></blockquote></blockquote></blockquote><blockquote><h5 id="5-最后保存为文件"><a href="#5-最后保存为文件" class="headerlink" title="5. 最后保存为文件"></a>5. 最后保存为文件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"ascii.txt"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(texts)</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><img src="https://s1.ax1x.com/2018/10/26/iyz3WV.jpg" alt="iyz3WV.jpg"></p></blockquote><h3 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pic_info</span><span class="params">(pic, zoom_pic)</span>:</span></span><br><span class="line">    img = Image.open(pic)</span><br><span class="line">    img_gray = img.convert(<span class="string">'L'</span>)</span><br><span class="line">    width, height = img_gray.size</span><br><span class="line">    img_gray = img_gray.resize((int(width * zoom_pic), int((height * zoom_pic) * <span class="number">0.5</span>)))</span><br><span class="line">    size = img_gray.size</span><br><span class="line">    <span class="keyword">return</span> size, img_gray</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_ascils</span><span class="params">(pic_info)</span>:</span></span><br><span class="line">    width = pic_info[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    height = pic_info[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">    img_gray = pic_info[<span class="number">1</span>]</span><br><span class="line">    ascils = <span class="string">'@%#*+=_. '</span></span><br><span class="line">    texts = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(height):</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> range(width):</span><br><span class="line">            gray = img_gray.getpixel((col, row))</span><br><span class="line">            texts += ascils[int(gray / <span class="number">255</span> * <span class="number">8</span>)]</span><br><span class="line">        texts += <span class="string">'\n'</span></span><br><span class="line">    <span class="keyword">return</span> texts</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_ascil</span><span class="params">(pic_to_ascils, pic)</span>:</span></span><br><span class="line">    name = <span class="string">''</span>.join(pic.split(<span class="string">'.'</span>)[:<span class="number">-1</span>]) + str(<span class="string">'.txt'</span>)</span><br><span class="line">    <span class="keyword">with</span> open(name, <span class="string">'w'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(pic_to_ascils)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    pic = input(<span class="string">'请放入图片:'</span>)</span><br><span class="line">    zoom_pic = float(input(<span class="string">'请输入缩放比例(eg:0.1):'</span>))</span><br><span class="line">    pic_info = get_pic_info(pic, zoom_pic)</span><br><span class="line">    pic_to_ascils = get_ascils(pic_info)</span><br><span class="line">    save_ascil(pic_to_ascils, pic)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><em>此篇blog是学习了小甲鱼的极客Python之效率革命的<a href="https://fishc.com.cn/thread-123382-1-1.html" target="_blank" rel="noopener">将你的女神变成字符画</a>之后写的学习笔记</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;用Python将图片转化ASCII&quot;&gt;&lt;a href=&quot;#用Python将图片转化ASCII&quot; class=&quot;headerlink&quot; title=&quot;用Python将图片转化ASCII&quot;&gt;&lt;/a&gt;用Python将图片转化ASCII&lt;/h1&gt;&lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h3&gt;&lt;h6 id=&quot;将彩图转化为灰度模式-去掉颜色-，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像&quot;&gt;&lt;a href=&quot;#将彩图转化为灰度模式-去掉颜色-，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像&quot; class=&quot;headerlink&quot; title=&quot;将彩图转化为灰度模式(去掉颜色)，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像&quot;&gt;&lt;/a&gt;将彩图转化为灰度模式(去掉颜色)，再更具每个像素的灰度值找到不同复杂度的ASCII字符一一映射，从而转换为ASCII字符图像&lt;/h6&gt;
    
    </summary>
    
      <category term="Python" scheme="https://www.tomtony.top/categories/Python/"/>
    
    
      <category term="Python" scheme="https://www.tomtony.top/tags/Python/"/>
    
      <category term="绘图" scheme="https://www.tomtony.top/tags/%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>多点触控 MultiAction</title>
    <link href="https://www.tomtony.top/2018/10/21/MultiAction/"/>
    <id>https://www.tomtony.top/2018/10/21/MultiAction/</id>
    <published>2018-10-21T13:55:33.000Z</published>
    <updated>2018-10-21T14:01:50.907Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MultiAction"><a href="#MultiAction" class="headerlink" title="MultiAction"></a>MultiAction</h1><p><em>MultiAction是多点触控的类，可以模拟用户多点操作。主要包含add()和perform()两个方法，MultiAction可以结合前面所学的ActionTouch可以模拟出用户的多个手指滑动的效果。</em></p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> appium.webdriver.common.multi_action <span class="keyword">import</span> MultiAction</span><br><span class="line"><span class="keyword">from</span> appium.webdriver.common.touch_action <span class="keyword">import</span> TouchAction</span><br></pre></td></tr></table></figure></blockquote><a id="more"></a><h3 id="加载"><a href="#加载" class="headerlink" title="加载:"></a>加载:</h3><h5 id="方法add-self-touch-actions-将TouchAction对象添加到MultiAction中，稍后执行"><a href="#方法add-self-touch-actions-将TouchAction对象添加到MultiAction中，稍后执行" class="headerlink" title="方法add(self,*touch_actions)将TouchAction对象添加到MultiAction中，稍后执行"></a>方法add(self,*touch_actions)将TouchAction对象添加到MultiAction中，稍后执行</h5><h5 id="参数"><a href="#参数" class="headerlink" title="参数:"></a>参数:</h5><h6 id="touch-action-一个后多个TouchAction对象，描述一个手指要执行的动作链"><a href="#touch-action-一个后多个TouchAction对象，描述一个手指要执行的动作链" class="headerlink" title="touch_action 一个后多个TouchAction对象，描述一个手指要执行的动作链"></a>touch_action 一个后多个TouchAction对象，描述一个手指要执行的动作链</h6><h5 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h5><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a1 = TouchAction(driver)</span><br><span class="line">a1.press(x,y).move_to(x,y).release()</span><br><span class="line">a2 = TouchAction(driver)</span><br><span class="line">a2.press(x,y).move_to(x,y).release()</span><br><span class="line">MultiAction(driver).add(a1, a2)</span><br></pre></td></tr></table></figure></blockquote><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><h5 id="perform-self-执行存储在对象中的操作。"><a href="#perform-self-执行存储在对象中的操作。" class="headerlink" title="perform(self) 执行存储在对象中的操作。"></a>perform(self) 执行存储在对象中的操作。</h5><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法:"></a>用法:</h5><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a1 = TouchAction(driver)</span><br><span class="line">a1.press(x,y).move_to(x,y).release()</span><br><span class="line">a2 = TouchAction(driver)</span><br><span class="line">a2.press(x,y).move_to(x,y).release()</span><br><span class="line">MultiAction(driver).add(a1, a2).perform()</span><br></pre></td></tr></table></figure></blockquote><h3 id="手机缩放图示理解"><a href="#手机缩放图示理解" class="headerlink" title="手机缩放图示理解"></a>手机缩放图示理解</h3><p><img src="https://s1.ax1x.com/2018/10/21/iBjtz9.md.png" alt="iBjtz9.md.png"></p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><em>在百度APP中执行放大两次再缩小两次</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> appium.webdriver.common.multi_action <span class="keyword">import</span> MultiAction</span><br><span class="line"><span class="keyword">from</span> appium.webdriver.common.touch_action <span class="keyword">import</span> TouchAction</span><br><span class="line"></span><br><span class="line">desired_caps = &#123;&#125;</span><br><span class="line">desired_caps[<span class="string">'platformName'</span>]=<span class="string">'Android'</span></span><br><span class="line">desired_caps[<span class="string">'deviceName'</span>]=<span class="string">'127.0.0.1:62026'</span></span><br><span class="line">desired_caps[<span class="string">'platforVersion'</span>]=<span class="string">'5.1.1'</span></span><br><span class="line"></span><br><span class="line">desired_caps[<span class="string">'app'</span>]=<span class="string">r'H:\测试学习\com.baidu.BaiduMap.apk'</span></span><br><span class="line">desired_caps[<span class="string">'appPackage'</span>]=<span class="string">'com.baidu.BaiduMap'</span></span><br><span class="line">desired_caps[<span class="string">'appActivity'</span>]=<span class="string">'com.baidu.baidumaps.WelcomeScreen'</span></span><br><span class="line">desired_caps[<span class="string">'noReset'</span>]=<span class="string">'False'</span></span><br><span class="line">driver = webdriver.Remote(<span class="string">'http://localhost:4723/wd/hub'</span>, desired_caps)</span><br><span class="line"></span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.baidu.BaiduMap:id/dj2'</span>).click()</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.baidu.BaiduMap:id/byo'</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_size</span><span class="params">()</span>:</span></span><br><span class="line">    x = driver.get_window_size()[<span class="string">'width'</span>]</span><br><span class="line">    y = driver.get_window_size()[<span class="string">'height'</span>]</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pinch</span><span class="params">()</span>:</span></span><br><span class="line">    size = get_size()</span><br><span class="line">    x = size[<span class="number">0</span>]</span><br><span class="line">    y = size[<span class="number">1</span>]</span><br><span class="line">    action1 = TouchAction(driver)</span><br><span class="line">    action2 = TouchAction(driver)</span><br><span class="line">    pinch_action = MultiAction(driver)</span><br><span class="line">    action1.press(x = x * <span class="number">0.2</span>, y = y * <span class="number">0.2</span>).wait(<span class="number">1000</span>).move_to(x = x * <span class="number">0.4</span>, y = y*<span class="number">0.4</span>).wait(<span class="number">1000</span>).release()</span><br><span class="line">    action2.press(x = x * <span class="number">0.8</span>, y = y * <span class="number">0.8</span>).wait(<span class="number">1000</span>).move_to(x = x * <span class="number">0.6</span>, y = y*<span class="number">0.6</span>).wait(<span class="number">1000</span>).release()</span><br><span class="line">    print(<span class="string">'pinch...'</span>)</span><br><span class="line">    pinch_action.add(action1, action2)</span><br><span class="line">    pinch_action.perform()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zoom</span><span class="params">()</span>:</span></span><br><span class="line">    size = get_size()</span><br><span class="line">    x = size[<span class="number">0</span>]</span><br><span class="line">    y = size[<span class="number">1</span>]</span><br><span class="line">    action1 = TouchAction(driver)</span><br><span class="line">    action2 = TouchAction(driver)</span><br><span class="line">    zoom_action = MultiAction(driver)</span><br><span class="line">    action1.press(x=x * <span class="number">0.4</span>, y=y * <span class="number">0.4</span>).wait(<span class="number">1000</span>).move_to(x=x * <span class="number">0.2</span>, y=y * <span class="number">0.2</span>).wait(<span class="number">1000</span>).release()</span><br><span class="line">    action2.press(x=x * <span class="number">0.6</span>, y=y * <span class="number">0.6</span>).wait(<span class="number">1000</span>).move_to(x=x * <span class="number">0.8</span>, y=y * <span class="number">0.8</span>).wait(<span class="number">1000</span>).release()</span><br><span class="line">    print(<span class="string">'zoom...'</span>)</span><br><span class="line">    zoom_action.add(action1, action2)</span><br><span class="line">    zoom_action.perform()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        pinch()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        zoom()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MultiAction&quot;&gt;&lt;a href=&quot;#MultiAction&quot; class=&quot;headerlink&quot; title=&quot;MultiAction&quot;&gt;&lt;/a&gt;MultiAction&lt;/h1&gt;&lt;p&gt;&lt;em&gt;MultiAction是多点触控的类，可以模拟用户多点操作。主要包含add()和perform()两个方法，MultiAction可以结合前面所学的ActionTouch可以模拟出用户的多个手指滑动的效果。&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; appium.webdriver.common.multi_action &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; MultiAction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; appium.webdriver.common.touch_action &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TouchAction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="appium" scheme="https://www.tomtony.top/tags/appium/"/>
    
      <category term="触控" scheme="https://www.tomtony.top/tags/%E8%A7%A6%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>浏览器兼容性测试简单介绍</title>
    <link href="https://www.tomtony.top/2018/10/20/%E5%85%BC%E5%AE%B9%E6%80%A7%E6%B5%8B%E8%AF%95%E4%BB%8B%E7%BB%8D/"/>
    <id>https://www.tomtony.top/2018/10/20/兼容性测试介绍/</id>
    <published>2018-10-20T09:29:01.000Z</published>
    <updated>2018-10-21T14:04:24.315Z</updated>
    
    <content type="html"><![CDATA[<h6 id="浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。-来自百度百科"><a href="#浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。-来自百度百科" class="headerlink" title="浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。 --来自百度百科"></a>浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。 --来自百度百科</h6><a id="more"></a><hr><h4 id="什么情况下做兼容性测"><a href="#什么情况下做兼容性测" class="headerlink" title="什么情况下做兼容性测"></a>什么情况下做兼容性测</h4><h6 id="试用的比较少的页面-比如后台-是不需要兼容性测试的，只有大量用户用的B-S网页才需要做兼容性测试"><a href="#试用的比较少的页面-比如后台-是不需要兼容性测试的，只有大量用户用的B-S网页才需要做兼容性测试" class="headerlink" title="试用的比较少的页面(比如后台)是不需要兼容性测试的，只有大量用户用的B/S网页才需要做兼容性测试"></a>试用的比较少的页面(比如后台)是不需要兼容性测试的，只有大量用户用的B/S网页才需要做兼容性测试</h6><h4 id="一般用什么浏览器"><a href="#一般用什么浏览器" class="headerlink" title="一般用什么浏览器"></a>一般用什么浏览器</h4><h6 id="一般必须的有：360-IE-Firefox-Chroem-Safari，其他看公司具体要求"><a href="#一般必须的有：360-IE-Firefox-Chroem-Safari，其他看公司具体要求" class="headerlink" title="一般必须的有：360 IE Firefox Chroem Safari，其他看公司具体要求"></a>一般必须的有：360 IE Firefox Chroem Safari，其他看公司具体要求</h6><h4 id="浏览器版本"><a href="#浏览器版本" class="headerlink" title="浏览器版本"></a>浏览器版本</h4><h6 id="一般用最新或自己电脑上的版本就可以了"><a href="#一般用最新或自己电脑上的版本就可以了" class="headerlink" title="一般用最新或自己电脑上的版本就可以了"></a>一般用最新或自己电脑上的版本就可以了</h6><h4 id="检查内容"><a href="#检查内容" class="headerlink" title="检查内容"></a>检查内容</h4><h6 id="主要检查：功能、UI"><a href="#主要检查：功能、UI" class="headerlink" title="主要检查：功能、UI"></a>主要检查：功能、UI</h6><h4 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h4><h6 id="1-https-app-crossbrowsertesting-com-国外的一个兼容性测试网站，可以模拟主流平台和浏览器，有试用时间"><a href="#1-https-app-crossbrowsertesting-com-国外的一个兼容性测试网站，可以模拟主流平台和浏览器，有试用时间" class="headerlink" title="1. https://app.crossbrowsertesting.com, 国外的一个兼容性测试网站，可以模拟主流平台和浏览器，有试用时间"></a>1. <a href="https://app.crossbrowsertesting.com" target="_blank" rel="noopener">https://app.crossbrowsertesting.com</a>, 国外的一个兼容性测试网站，可以模拟主流平台和浏览器，有试用时间</h6><p><img src="https://s1.ax1x.com/2018/10/20/iBp76J.jpg" alt="iBp76J.jpg"></p><h6 id="2-Turbo-官网：https-turbo-net-browsers-是一个浏览器沙盒，内置有主流的浏览器，就不用在自己的电脑上安装各种浏览器。-缺点：程序启动速度慢"><a href="#2-Turbo-官网：https-turbo-net-browsers-是一个浏览器沙盒，内置有主流的浏览器，就不用在自己的电脑上安装各种浏览器。-缺点：程序启动速度慢" class="headerlink" title="2. Turbo 官网：https://turbo.net/browsers, 是一个浏览器沙盒，内置有主流的浏览器，就不用在自己的电脑上安装各种浏览器。(缺点：程序启动速度慢)"></a>2. Turbo 官网：<a href="https://turbo.net/browsers" target="_blank" rel="noopener">https://turbo.net/browsers</a>, 是一个浏览器沙盒，内置有主流的浏览器，就不用在自己的电脑上安装各种浏览器。(缺点：程序启动速度慢)</h6><p><img src="https://s1.ax1x.com/2018/10/20/iBpHX9.jpg" alt="iBpHX9.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。-来自百度百科&quot;&gt;&lt;a href=&quot;#浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。-来自百度百科&quot; class=&quot;headerlink&quot; title=&quot;浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。 --来自百度百科&quot;&gt;&lt;/a&gt;浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。 --来自百度百科&lt;/h6&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="兼容性" scheme="https://www.tomtony.top/tags/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>Bug的等级</title>
    <link href="https://www.tomtony.top/2018/10/18/bug%E7%AD%89%E7%BA%A7%E5%88%86%E5%88%92/"/>
    <id>https://www.tomtony.top/2018/10/18/bug等级分划/</id>
    <published>2018-10-18T12:17:00.000Z</published>
    <updated>2018-10-23T11:21:53.968Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bug的等级"><a href="#Bug的等级" class="headerlink" title="Bug的等级"></a>Bug的等级</h1><p>bug的等级，这个划分有分三级、四级和五级的。如果是等级越高，那么可能被修复的等级也会高一些，在一些公司bug的数量和bug的等级是考察绩效的重要标准。很多情况下，我们提交的bug大致的等级差不多即可，没有严格区分。<br>bug的等级，一般可参照如下判断<br><a id="more"></a></p><h2 id="Bug划分依据（参考）"><a href="#Bug划分依据（参考）" class="headerlink" title="Bug划分依据（参考）"></a>Bug划分依据（参考）</h2><h3 id="（一）致命错误："><a href="#（一）致命错误：" class="headerlink" title="（一）致命错误："></a>（一）致命错误：</h3><ul><li><h6 id="1、常规操作引起的系统崩溃、死机、死循环。（如：输入正确的用户名密码后点击登录，机器会卡死）"><a href="#1、常规操作引起的系统崩溃、死机、死循环。（如：输入正确的用户名密码后点击登录，机器会卡死）" class="headerlink" title="1、常规操作引起的系统崩溃、死机、死循环。（如：输入正确的用户名密码后点击登录，机器会卡死）"></a>1、常规操作引起的系统崩溃、死机、死循环。（如：输入正确的用户名密码后点击登录，机器会卡死）</h6></li><li><h6 id="2、造成数据泄漏的安全性问题。（如：恶意攻击造成的账户私密信息泄漏）"><a href="#2、造成数据泄漏的安全性问题。（如：恶意攻击造成的账户私密信息泄漏）" class="headerlink" title="2、造成数据泄漏的安全性问题。（如：恶意攻击造成的账户私密信息泄漏）"></a>2、造成数据泄漏的安全性问题。（如：恶意攻击造成的账户私密信息泄漏）</h6></li><li><h6 id="3、涉及金钱-计算"><a href="#3、涉及金钱-计算" class="headerlink" title="3、涉及金钱 计算"></a>3、涉及金钱 计算</h6><h3 id="（二）严重错误："><a href="#（二）严重错误：" class="headerlink" title="（二）严重错误："></a>（二）严重错误：</h3></li><li><h6 id="1、重要功能不能实现"><a href="#1、重要功能不能实现" class="headerlink" title="1、重要功能不能实现"></a>1、重要功能不能实现</h6></li><li><h6 id="2、错误的波及面广，影响到其他重要功能正常实现"><a href="#2、错误的波及面广，影响到其他重要功能正常实现" class="headerlink" title="2、错误的波及面广，影响到其他重要功能正常实现"></a>2、错误的波及面广，影响到其他重要功能正常实现</h6></li><li><h6 id="3、非常规操作导致的程序崩溃、死机、死循环"><a href="#3、非常规操作导致的程序崩溃、死机、死循环" class="headerlink" title="3、非常规操作导致的程序崩溃、死机、死循环"></a>3、非常规操作导致的程序崩溃、死机、死循环</h6></li><li><h6 id="4、外观难以接受的缺陷"><a href="#4、外观难以接受的缺陷" class="headerlink" title="4、外观难以接受的缺陷"></a>4、外观难以接受的缺陷</h6></li><li><h6 id="5、密码明文显示"><a href="#5、密码明文显示" class="headerlink" title="5、密码明文显示"></a>5、密码明文显示</h6><h3 id="（三）一般错误："><a href="#（三）一般错误：" class="headerlink" title="（三）一般错误："></a>（三）一般错误：</h3><em>不影响产品的运行、不会成为故障起因，但对产品外观和下道工序影响较大的缺陷</em></li><li><h6 id="1、次要功能不能实现"><a href="#1、次要功能不能实现" class="headerlink" title="1、次要功能不能实现"></a>1、次要功能不能实现</h6></li><li><h6 id="2、操作界面错误（包括数据窗口内列明定义、含义不一致）"><a href="#2、操作界面错误（包括数据窗口内列明定义、含义不一致）" class="headerlink" title="2、操作界面错误（包括数据窗口内列明定义、含义不一致）"></a>2、操作界面错误（包括数据窗口内列明定义、含义不一致）</h6></li><li><h6 id="3、查询错误，数据错误显示"><a href="#3、查询错误，数据错误显示" class="headerlink" title="3、查询错误，数据错误显示"></a>3、查询错误，数据错误显示</h6></li><li><h6 id="4、简单的输入限制未放在前段进行控制（格式限制）"><a href="#4、简单的输入限制未放在前段进行控制（格式限制）" class="headerlink" title="4、简单的输入限制未放在前段进行控制（格式限制）"></a>4、简单的输入限制未放在前段进行控制（格式限制）</h6></li><li><h6 id="5、删除操作为给出提示"><a href="#5、删除操作为给出提示" class="headerlink" title="5、删除操作为给出提示"></a>5、删除操作为给出提示</h6><h2 id="Bug的生命周期"><a href="#Bug的生命周期" class="headerlink" title="Bug的生命周期"></a>Bug的生命周期</h2><img src="https://s1.ax1x.com/2018/10/18/iwaADH.png" alt="iwaADH.png"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Bug的等级&quot;&gt;&lt;a href=&quot;#Bug的等级&quot; class=&quot;headerlink&quot; title=&quot;Bug的等级&quot;&gt;&lt;/a&gt;Bug的等级&lt;/h1&gt;&lt;p&gt;bug的等级，这个划分有分三级、四级和五级的。如果是等级越高，那么可能被修复的等级也会高一些，在一些公司bug的数量和bug的等级是考察绩效的重要标准。很多情况下，我们提交的bug大致的等级差不多即可，没有严格区分。&lt;br&gt;bug的等级，一般可参照如下判断&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="等级" scheme="https://www.tomtony.top/tags/%E7%AD%89%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>测试用例</title>
    <link href="https://www.tomtony.top/2018/10/17/TestCase/"/>
    <id>https://www.tomtony.top/2018/10/17/TestCase/</id>
    <published>2018-10-17T15:00:00.000Z</published>
    <updated>2018-10-21T14:02:03.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h1><h3 id="测试用例的八大要素："><a href="#测试用例的八大要素：" class="headerlink" title="测试用例的八大要素："></a>测试用例的八大要素：</h3><h5 id="1-用例编号"><a href="#1-用例编号" class="headerlink" title="1.用例编号"></a>1.用例编号</h5><p><em>产品名-测试阶段-测试项-xxx</em><br><a id="more"></a></p><h5 id="2-测试项目"><a href="#2-测试项目" class="headerlink" title="2.测试项目"></a>2.测试项目</h5><p><em>对应一个功能模块(细分功能)</em></p><h5 id="3-测试标题"><a href="#3-测试标题" class="headerlink" title="3.测试标题"></a>3.测试标题</h5><p><em>直接对测试点进行细化得出，输入内容+结果，同一功能模块标题不能重复(来自测试点)</em></p><h5 id="4-重要级别"><a href="#4-重要级别" class="headerlink" title="4.重要级别"></a>4.重要级别</h5><p><em>高/中/低</em></p><h5 id="5-预置条件"><a href="#5-预置条件" class="headerlink" title="5.预置条件"></a>5.预置条件</h5><p><em>需满足一些前提条件，否则用例无法执行</em></p><h5 id="6-测试输入"><a href="#6-测试输入" class="headerlink" title="6.测试输入"></a>6.测试输入</h5><p><em>需要加工的输入信息，更具具体情况来设计(跟步骤结合起来一定要有指导意义)</em></p><h5 id="7-操作步骤"><a href="#7-操作步骤" class="headerlink" title="7.操作步骤"></a>7.操作步骤</h5><p><em>明确给出每个步骤的描述，执行人员可以根据该步骤完成执行工作</em></p><h5 id="8-预期结果"><a href="#8-预期结果" class="headerlink" title="8.预期结果"></a>8.预期结果</h5><p><em>根据预期输出对比实际结果，来判断被测对象是否符合需求。(预期结果唯一，不能出现”是否或者”)</em></p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>Excel版<br><img src="https://s1.ax1x.com/2018/10/21/iBW35V.md.jpg" alt="iBW35V.md.jpg"><br>XMind版<br><img src="/2018/10/17/TestCase/2.JPG" alt="XMind版"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;测试用例&quot;&gt;&lt;a href=&quot;#测试用例&quot; class=&quot;headerlink&quot; title=&quot;测试用例&quot;&gt;&lt;/a&gt;测试用例&lt;/h1&gt;&lt;h3 id=&quot;测试用例的八大要素：&quot;&gt;&lt;a href=&quot;#测试用例的八大要素：&quot; class=&quot;headerlink&quot; title=&quot;测试用例的八大要素：&quot;&gt;&lt;/a&gt;测试用例的八大要素：&lt;/h3&gt;&lt;h5 id=&quot;1-用例编号&quot;&gt;&lt;a href=&quot;#1-用例编号&quot; class=&quot;headerlink&quot; title=&quot;1.用例编号&quot;&gt;&lt;/a&gt;1.用例编号&lt;/h5&gt;&lt;p&gt;&lt;em&gt;产品名-测试阶段-测试项-xxx&lt;/em&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="用例设计方法" scheme="https://www.tomtony.top/tags/%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>测试用例设计方法</title>
    <link href="https://www.tomtony.top/2018/10/17/TestCaseDesignMethod/"/>
    <id>https://www.tomtony.top/2018/10/17/TestCaseDesignMethod/</id>
    <published>2018-10-17T13:26:00.000Z</published>
    <updated>2018-10-17T13:38:10.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试用例设计方法"><a href="#测试用例设计方法" class="headerlink" title="测试用例设计方法"></a>测试用例设计方法</h1><ul><li><h4 id="等价类划分法"><a href="#等价类划分法" class="headerlink" title="等价类划分法"></a>等价类划分法</h4><em>等价类划分法时一种典型的、重要的黑盒测试方法，是指某个输入域的子集合。在该子集合中，所有的输入数据对于揭露软件中的储物都是等效的。</em><br><em>等价类划分<strong>有效等价类</strong>和<strong>无效等价类</strong></em><a id="more"></a></li><li><h6 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h6><p><img src="/2018/10/17/TestCaseDesignMethod/001.JPG" alt="等价例子"></p></li><li><h4 id="边界值分析法"><a href="#边界值分析法" class="headerlink" title="边界值分析法"></a>边界值分析法</h4><p><em>边界值分析法时对等价类划分法的一个补充，边界值一般都是从等价的边缘值去寻找。边界值分析法的基本思想：<strong>正好等于</strong>、<strong>刚刚大于</strong>、<strong>刚刚小于</strong>边界的值作为初始数据</em><br><em>注意：0和负数是特殊值，考虑边界值是也要考虑进入</em></p></li><li><h6 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h6><p>在上图的条件下边界值有-1,0,1,58,59,60,61,99,100,101</p></li><li><h4 id="错误推测法"><a href="#错误推测法" class="headerlink" title="错误推测法"></a>错误推测法</h4><p><em>故意进行错误操作，看看有没有异常处理</em></p></li><li><h6 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h6><p>例如测试登录功能时，用错误的账号密码进行测试</p></li><li><h4 id="场景法"><a href="#场景法" class="headerlink" title="场景法"></a>场景法</h4><p><em>从用户的角度出发，看用户怎么操作(一般用于多个功能)</em></p></li><li><h6 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h6><img src="/2018/10/17/TestCaseDesignMethod/002.JPG" alt="场景法"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;测试用例设计方法&quot;&gt;&lt;a href=&quot;#测试用例设计方法&quot; class=&quot;headerlink&quot; title=&quot;测试用例设计方法&quot;&gt;&lt;/a&gt;测试用例设计方法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;等价类划分法&quot;&gt;&lt;a href=&quot;#等价类划分法&quot; class=&quot;headerlink&quot; title=&quot;等价类划分法&quot;&gt;&lt;/a&gt;等价类划分法&lt;/h4&gt;&lt;em&gt;等价类划分法时一种典型的、重要的黑盒测试方法，是指某个输入域的子集合。在该子集合中，所有的输入数据对于揭露软件中的储物都是等效的。&lt;/em&gt;&lt;br&gt;&lt;em&gt;等价类划分&lt;strong&gt;有效等价类&lt;/strong&gt;和&lt;strong&gt;无效等价类&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="用例设计方法" scheme="https://www.tomtony.top/tags/%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>滑动操作 TouchAction</title>
    <link href="https://www.tomtony.top/2018/10/16/TouchAction/"/>
    <id>https://www.tomtony.top/2018/10/16/TouchAction/</id>
    <published>2018-10-16T07:50:00.000Z</published>
    <updated>2018-10-21T14:08:44.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TouchAction"><a href="#TouchAction" class="headerlink" title="TouchAction"></a>TouchAction</h1><p><em>Touch Action包含一些列操作，比如按压、长按、点击、移动、暂停。由着些不同操作可以组成一套动作。使用TochAction需要先导入对应的模块</em><br><code>from appium.webdriver.common.touch_action import TouchAction</code></p><a id="more"></a><ul><li><h4 id="按压"><a href="#按压" class="headerlink" title="按压"></a>按压</h4><p><em>方法：press() 开始按压一个元素或坐标点（x,y）。通过手指按压手机屏幕的某个位置。 press也可以接收屏幕的坐标（x,y）。</em></p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">press(self, el=<span class="keyword">None</span>, x=<span class="keyword">None</span>, y=<span class="keyword">None</span>)</span><br><span class="line">TouchAction(driver).press(x=<span class="number">0</span>,y=<span class="number">300</span>)</span><br></pre></td></tr></table></figure></blockquote></li><li><h4 id="长按"><a href="#长按" class="headerlink" title="长按"></a>长按</h4><p><em>方法：longPress() 开始按压一个元素或坐标点（x,y）。 相比press()方法，longPress()多了一个入参，既然长按，得有按的时间吧。duration以毫秒为单位。1000表示按一秒钟。其用法与press()方法相同。</em></p><blockquote><p><code>long_press(self, el=None, x=None, y=None, duration=1000)</code></p></blockquote></li><li><h4 id="点击"><a href="#点击" class="headerlink" title="点击"></a>点击</h4><p><em>方法：tap() 对一个元素或控件执行点击操作。用法参考press()。</em></p><blockquote><p><code>tap(self, element=None, x=None, y=None, count=1)</code></p></blockquote></li><li><h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><p>_方法：move_to() 将指针从上一个点移动到指定的元素或点。_</p><blockquote><p><code>move_to(self, el=None, x=None, y=None)</code></p></blockquote></li><li><h4 id="暂停"><a href="#暂停" class="headerlink" title="暂停"></a>暂停</h4><p><em>方法：Wait(),暂停脚本的执行，单位为毫秒</em></p><blockquote><p><code>wait(self, ms=0)</code></p></blockquote></li><li><h4 id="释放"><a href="#释放" class="headerlink" title="释放"></a>释放</h4><p><em>方法release() 结束的行动取消屏幕上的指针。</em></p><blockquote><p><code>release(self)</code></p></blockquote></li><li><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><p><em>perform() 执行的操作发送到服务器的命令操作</em></p><blockquote><p><code>perform(self)</code></p></blockquote></li></ul><h1 id="TouchAction实例-九宫格滑动操作"><a href="#TouchAction实例-九宫格滑动操作" class="headerlink" title="TouchAction实例-九宫格滑动操作"></a>TouchAction实例-九宫格滑动操作</h1><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> appium.webdriver.common.touch_action <span class="keyword">import</span> TouchAction</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> NoSuchElementException</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">desired_caps=&#123;&#125;</span><br><span class="line">desired_caps[<span class="string">'platformName'</span>]=<span class="string">'Android'</span></span><br><span class="line">desired_caps[<span class="string">'deviceName'</span>]=<span class="string">'127.0.0.1:62025'</span></span><br><span class="line">desired_caps[<span class="string">'platforVersion'</span>]=<span class="string">'5.1.1'</span></span><br><span class="line"></span><br><span class="line">desired_caps[<span class="string">'app'</span>]=<span class="string">r'H:\测试学习\mymoney.apk'</span></span><br><span class="line">desired_caps[<span class="string">'appPackage'</span>]=<span class="string">'com.mymoney'</span></span><br><span class="line">desired_caps[<span class="string">'appActivity'</span>]=<span class="string">'com.mymoney.biz.splash.SplashScreenActivity'</span></span><br><span class="line"></span><br><span class="line">driver=webdriver.Remote(<span class="string">'http://localhost:4723/wd/hub'</span>,desired_caps)</span><br><span class="line">driver.implicitly_wait(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_size</span><span class="params">()</span>:</span></span><br><span class="line">    x=driver.get_window_size()[<span class="string">'width'</span>]</span><br><span class="line">    y=driver.get_window_size()[<span class="string">'height'</span>]</span><br><span class="line">    <span class="keyword">return</span> x,y</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">swipeLeft</span><span class="params">()</span>:</span></span><br><span class="line">    l=get_size()</span><br><span class="line">    x1=int(l[<span class="number">0</span>]*<span class="number">0.9</span>)</span><br><span class="line">    y1=int(l[<span class="number">1</span>]*<span class="number">0.5</span>)</span><br><span class="line">    x2=int(l[<span class="number">0</span>]*<span class="number">0.1</span>)</span><br><span class="line">    driver.swipe(x1,y1,x2,y1,<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">swipeUp</span><span class="params">()</span>:</span></span><br><span class="line">    l = get_size()</span><br><span class="line">    x1 = int(l[<span class="number">0</span>] * <span class="number">0.5</span>)</span><br><span class="line">    y1 = int(l[<span class="number">1</span>] * <span class="number">0.95</span>)</span><br><span class="line">    y2 = int(l[<span class="number">1</span>] * <span class="number">0.35</span>)</span><br><span class="line">    driver.swipe(x1, y1, x1, y2, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">WebDriverWait(driver,<span class="number">6</span>).until(<span class="keyword">lambda</span> x:x.find_element_by_id(<span class="string">'com.mymoney:id/next_btn'</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">    swipeLeft()</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(<span class="string">'com.mymoney:id/begin_btn'</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    closeBtn=driver.find_element_by_id(<span class="string">'com.mymoney:id/close_iv'</span>)</span><br><span class="line"><span class="keyword">except</span> NoSuchElementException:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    closeBtn.click()</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(<span class="string">'com.mymoney:id/nav_setting_btn'</span>).click()</span><br><span class="line">WebDriverWait(driver,<span class="number">6</span>).until(<span class="keyword">lambda</span> x:x.find_element_by_id(<span class="string">'com.mymoney:id/content_container_ly'</span>))</span><br><span class="line">swipeUp()</span><br><span class="line"></span><br><span class="line">driver.find_element_by_android_uiautomator(<span class="string">'new UiSelector().text("高级")'</span>).click()</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(<span class="string">'com.mymoney:id/password_protected_briv'</span>).click()</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.mymoney:id/lock_pattern_or_not_sriv'</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">    TouchAction(driver).press(x=<span class="number">218</span>,y=<span class="number">298</span>).wait(<span class="number">2000</span>)\</span><br><span class="line">    .move_to(x=<span class="number">360</span>,y=<span class="number">298</span>).wait(<span class="number">1000</span>)\</span><br><span class="line">    .move_to(x=<span class="number">510</span>,y=<span class="number">440</span>).wait(<span class="number">1000</span>)\</span><br><span class="line">    .move_to(x=<span class="number">510</span>,y=<span class="number">590</span>).wait(<span class="number">1000</span>)\</span><br><span class="line">    .release().perform()</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TouchAction&quot;&gt;&lt;a href=&quot;#TouchAction&quot; class=&quot;headerlink&quot; title=&quot;TouchAction&quot;&gt;&lt;/a&gt;TouchAction&lt;/h1&gt;&lt;p&gt;&lt;em&gt;Touch Action包含一些列操作，比如按压、长按、点击、移动、暂停。由着些不同操作可以组成一套动作。使用TochAction需要先导入对应的模块&lt;/em&gt;&lt;br&gt;&lt;code&gt;from appium.webdriver.common.touch_action import TouchAction&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="appium" scheme="https://www.tomtony.top/tags/appium/"/>
    
      <category term="touchaction" scheme="https://www.tomtony.top/tags/touchaction/"/>
    
      <category term="滑动" scheme="https://www.tomtony.top/tags/%E6%BB%91%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>滑动</title>
    <link href="https://www.tomtony.top/2018/10/14/swipe/"/>
    <id>https://www.tomtony.top/2018/10/14/swipe/</id>
    <published>2018-10-14T15:30:00.000Z</published>
    <updated>2018-10-23T11:30:14.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="swipe-滑动"><a href="#swipe-滑动" class="headerlink" title="swipe 滑动"></a>swipe 滑动</h1><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><blockquote><p><code>driver.swipe(x1, y1, x2, y2, 1000)</code></p></blockquote><p><em>由坐标(x1,y1)滑动到坐标(x2,y2)处,持续时间1秒</em><br><a id="more"></a></p><h4 id="坐标获取技巧"><a href="#坐标获取技巧" class="headerlink" title="坐标获取技巧"></a>坐标获取技巧</h4><p>_可同过get_devices_size()得到荧幕宽高后,在分别乘以一个0.X的浮点数则可得到一坐标_</p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = driver.get_window_size()[<span class="string">'width'</span>]</span><br><span class="line">y = driver.get_window_size()[<span class="string">'height'</span>]</span><br><span class="line">x1 = int(x*<span class="number">0.9</span>)</span><br><span class="line">y1 = int(y*<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></blockquote><h4 id="具体事例"><a href="#具体事例" class="headerlink" title="具体事例"></a>具体事例</h4><p><em>由右向左滑动两次</em></p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> appium_test.capability <span class="keyword">import</span> driver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_devices_size</span><span class="params">()</span>:</span></span><br><span class="line">    x = driver.get_window_size()[<span class="string">'width'</span>]</span><br><span class="line">    y = driver.get_window_size()[<span class="string">'height'</span>]</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">swipeLeft</span><span class="params">()</span>:</span></span><br><span class="line">    l = get_devices_size()</span><br><span class="line">    x1 = int(l[<span class="number">0</span>]*<span class="number">0.9</span>)</span><br><span class="line">    x2 = int(l[<span class="number">0</span>]*<span class="number">0.1</span>)</span><br><span class="line">    y1 = int(l[<span class="number">1</span>]*<span class="number">0.5</span>)</span><br><span class="line">    driver.swipe(x1, y1, x2, y1, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">    swipeLeft()</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;swipe-滑动&quot;&gt;&lt;a href=&quot;#swipe-滑动&quot; class=&quot;headerlink&quot; title=&quot;swipe 滑动&quot;&gt;&lt;/a&gt;swipe 滑动&lt;/h1&gt;&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;driver.swipe(x1, y1, x2, y2, 1000)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;由坐标(x1,y1)滑动到坐标(x2,y2)处,持续时间1秒&lt;/em&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="appium" scheme="https://www.tomtony.top/tags/appium/"/>
    
      <category term="swipe" scheme="https://www.tomtony.top/tags/swipe/"/>
    
  </entry>
  
  <entry>
    <title>H5定位方法</title>
    <link href="https://www.tomtony.top/2018/10/14/H5%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://www.tomtony.top/2018/10/14/H5定位方法/</id>
    <published>2018-10-14T13:20:00.000Z</published>
    <updated>2018-10-23T11:32:50.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="APP内嵌H5定位方法"><a href="#APP内嵌H5定位方法" class="headerlink" title="APP内嵌H5定位方法"></a>APP内嵌H5定位方法</h1><p><em>方法：定位app内元素时用appium定位方法定位,定位H5页面元素时用selenium定位方法定位.他们之间的切换用contexts切换</em><br><a id="more"></a></p><h3 id="第一步-得到APP和H5的contexts值"><a href="#第一步-得到APP和H5的contexts值" class="headerlink" title="第一步 得到APP和H5的contexts值"></a>第一步 得到APP和H5的contexts值</h3><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">contexts = driver.contexts</span><br><span class="line">print(contexts)</span><br></pre></td></tr></table></figure></blockquote><p><em>这里得到的第一个值为APP的contexts，第二个为selenium的contexts</em></p><h4 id="so"><a href="#so" class="headerlink" title="so"></a>so</h4><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">context_appium = contexts[<span class="number">0</span>]</span><br><span class="line">context_selenium = context[<span class="number">1</span>]</span><br></pre></td></tr></table></figure></blockquote><h3 id="第二步-appium和selenium之间的切换"><a href="#第二步-appium和selenium之间的切换" class="headerlink" title="第二步 appium和selenium之间的切换"></a>第二步 appium和selenium之间的切换</h3><h4 id="appium切换到selenium"><a href="#appium切换到selenium" class="headerlink" title="appium切换到selenium"></a>appium切换到selenium</h4><blockquote><p><code>driver.switch_to.contexts(&#39;WEBVIEW_com.wondershare.drfone&#39;)</code><br>或 <code>driver.switch_to.contexts(context_selenium)</code></p></blockquote><h4 id="selenium切换到appium"><a href="#selenium切换到appium" class="headerlink" title="selenium切换到appium"></a>selenium切换到appium</h4><blockquote><p><code>driver.switch_to.context(&#39;NATIVE_APP&#39;)</code><br>或 <code>driver.switch_to.contexts(context_appium)</code></p></blockquote><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">desired_caps=&#123;&#125;</span><br><span class="line">desired_caps[<span class="string">'platformName'</span>]=<span class="string">'Android'</span></span><br><span class="line">desired_caps[<span class="string">'platformVersion'</span>]=<span class="string">'5.1.1'</span></span><br><span class="line">desired_caps[<span class="string">'deviceName'</span>]=<span class="string">'127.0.0.1:21503'</span></span><br><span class="line"></span><br><span class="line">desired_caps[<span class="string">'app'</span>]=<span class="string">r'H:\测试学习\dr.fone3.2.0.apk'</span></span><br><span class="line">desired_caps[<span class="string">'appPackage'</span>]=<span class="string">'com.wondershare.drfone'</span></span><br><span class="line">desired_caps[<span class="string">'appActivity'</span>]=<span class="string">'com.wondershare.drfone.ui.activity.WelcomeActivity'</span></span><br><span class="line"></span><br><span class="line">driver=webdriver.Remote(<span class="string">'http://localhost:4723/wd/hub'</span>,desired_caps)</span><br><span class="line">driver.implicitly_wait(<span class="number">8</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.wondershare.drfone:id/btnBackup'</span>).click()</span><br><span class="line"></span><br><span class="line">WebDriverWait(driver,<span class="number">10</span>).until(<span class="keyword">lambda</span> x:x.find_element_by_id(<span class="string">'com.wondershare.drfone:id/btnRecoverData'</span>))</span><br><span class="line">driver.find_element_by_id(<span class="string">'com.wondershare.drfone:id/btnRecoverData'</span>).click()</span><br><span class="line"></span><br><span class="line">WebDriverWait(driver,<span class="number">10</span>).until(<span class="keyword">lambda</span> x:x.find_element_by_class_name(<span class="string">'android.webkit.WebView'</span>))</span><br><span class="line">contexts=driver.contexts</span><br><span class="line">print(contexts)</span><br><span class="line">context_selenium = contexts[<span class="number">1</span>]</span><br><span class="line">context_appium = contexts[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#driver.switch_to.context(context_selenium)</span></span><br><span class="line">driver.switch_to.context(<span class="string">'WEBVIEW_com.wondershare.drfone'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'email'</span>).send_keys(<span class="string">'shuqing2018@163.com'</span>)</span><br><span class="line">driver.find_element_by_class_name(<span class="string">'btn_send'</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment">#driver.switch_to.context(context_appium)</span></span><br><span class="line">driver.switch_to.context(<span class="string">'NATIVE_APP'</span>)</span><br><span class="line">driver.find_element_by_class_name(<span class="string">'android.widget.ImageButton'</span>).click()</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;APP内嵌H5定位方法&quot;&gt;&lt;a href=&quot;#APP内嵌H5定位方法&quot; class=&quot;headerlink&quot; title=&quot;APP内嵌H5定位方法&quot;&gt;&lt;/a&gt;APP内嵌H5定位方法&lt;/h1&gt;&lt;p&gt;&lt;em&gt;方法：定位app内元素时用appium定位方法定位,定位H5页面元素时用selenium定位方法定位.他们之间的切换用contexts切换&lt;/em&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="appium" scheme="https://www.tomtony.top/tags/appium/"/>
    
      <category term="h5定位" scheme="https://www.tomtony.top/tags/h5%E5%AE%9A%E4%BD%8D/"/>
    
      <category term="contexts" scheme="https://www.tomtony.top/tags/contexts/"/>
    
  </entry>
  
  <entry>
    <title>Linux计划任务_crontab</title>
    <link href="https://www.tomtony.top/2018/10/13/Linux%E8%AE%A1%E5%88%92_crontab/"/>
    <id>https://www.tomtony.top/2018/10/13/Linux计划_crontab/</id>
    <published>2018-10-13T14:20:00.000Z</published>
    <updated>2018-10-17T01:43:37.033Z</updated>
    
    <content type="html"><![CDATA[<h1 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h1><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="创建计划任务"><a href="#创建计划任务" class="headerlink" title="创建计划任务"></a>创建计划任务</h4><blockquote><p><code>crontab -e</code></p></blockquote><a id="more"></a><h4 id="查看已创建的计划任务"><a href="#查看已创建的计划任务" class="headerlink" title="查看已创建的计划任务"></a>查看已创建的计划任务</h4><blockquote><p><code>crontab -l</code></p></blockquote><h4 id="删除计划任务"><a href="#删除计划任务" class="headerlink" title="删除计划任务"></a>删除计划任务</h4><blockquote><p><code>crontab -r</code></p></blockquote><h3 id="计划格式"><a href="#计划格式" class="headerlink" title="计划格式"></a>计划格式</h3><blockquote><p><code>* * * * * command</code></p></blockquote><p><em>分　时　日　月　周　命令</em><br><em>星号（<em>）：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作。<br>逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”<br>中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”<br>正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如</em>/10，如果用在minute字段，表示每十分钟执行一次。</em></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><blockquote><p><code>0 12,17,20 * * * python2 /home/test/test.py &gt;&gt; /home/test/test.log</code></p></blockquote><p><em>每天12/17/20点整执行Python文件test.py,并将输出结果保存到test.log文件中</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;crontab&quot;&gt;&lt;a href=&quot;#crontab&quot; class=&quot;headerlink&quot; title=&quot;crontab&quot;&gt;&lt;/a&gt;crontab&lt;/h1&gt;&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;h4 id=&quot;创建计划任务&quot;&gt;&lt;a href=&quot;#创建计划任务&quot; class=&quot;headerlink&quot; title=&quot;创建计划任务&quot;&gt;&lt;/a&gt;创建计划任务&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.tomtony.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.tomtony.top/tags/Linux/"/>
    
      <category term="计划任务" scheme="https://www.tomtony.top/tags/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>测试学习笔记</title>
    <link href="https://www.tomtony.top/2018/10/12/%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.tomtony.top/2018/10/12/测试学习笔记/</id>
    <published>2018-10-12T13:26:00.000Z</published>
    <updated>2018-10-17T01:44:00.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h1><h4 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h4><blockquote><p>adb shell screencap /sdcard/wangdoujia.png</p></blockquote><a id="more"></a><h4 id="安装apk"><a href="#安装apk" class="headerlink" title="安装apk"></a>安装apk</h4><blockquote><p>adb install xxx.apk</p></blockquote><h4 id="删除APP"><a href="#删除APP" class="headerlink" title="删除APP"></a>删除APP</h4><blockquote><p>adb uninstall xxx<br><em>xxx为apk的包名</em></p></blockquote><h4 id="显示手机所有的APP包名"><a href="#显示手机所有的APP包名" class="headerlink" title="显示手机所有的APP包名"></a>显示手机所有的APP包名</h4><blockquote><p>adb shell pm list package</p></blockquote><hr><h1 id="aapt"><a href="#aapt" class="headerlink" title="aapt"></a>aapt</h1><h4 id="查看app的package"><a href="#查看app的package" class="headerlink" title="查看app的package"></a>查看app的package</h4><blockquote><p>aapt dump badging H:\测试学习\wandoujia.apk | findstr “package”</p></blockquote><h4 id="查看app的启动页面的activity"><a href="#查看app的启动页面的activity" class="headerlink" title="查看app的启动页面的activity"></a>查看app的启动页面的activity</h4><blockquote><p>aapt dump badging H:\测试学习\wandoujia.apk | findstr “launchable-activity”</p></blockquote><hr><h1 id="Moneky"><a href="#Moneky" class="headerlink" title="Moneky"></a>Moneky</h1><h4 id="在手机上执行100个伪随机事件"><a href="#在手机上执行100个伪随机事件" class="headerlink" title="在手机上执行100个伪随机事件"></a>在手机上执行100个伪随机事件</h4><blockquote><p>adb shell monkey 100</p></blockquote><h4 id="每次随机事件间隔3秒并显示日志"><a href="#每次随机事件间隔3秒并显示日志" class="headerlink" title="每次随机事件间隔3秒并显示日志"></a>每次随机事件间隔3秒并显示日志</h4><blockquote><p>adb shell monkey -v –throttle 3000 10</p></blockquote><h4 id="自定义事件概率"><a href="#自定义事件概率" class="headerlink" title="自定义事件概率"></a>自定义事件概率</h4><h6 id="touch概率为30"><a href="#touch概率为30" class="headerlink" title="touch概率为30%"></a>touch概率为30%</h6><blockquote><p>adb shell monkey -v –pct-touch 30 200<br>_触控<em>touch,启动事件—appswtich,手势—motion,旋转—rotation,轨迹—trackball,基本导航—nav,主要导航-majornav,系统按键-syskeys</em></p></blockquote><h6 id="设定多个事件的概率"><a href="#设定多个事件的概率" class="headerlink" title="设定多个事件的概率"></a>设定多个事件的概率</h6><blockquote><p>adb shell monkey -v –pct-touch 30 –pct-motion 40 200</p></blockquote><h4 id="在指定的地方执行事件"><a href="#在指定的地方执行事件" class="headerlink" title="在指定的地方执行事件"></a>在指定的地方执行事件</h4><h6 id="在指定的app里进行随机事件"><a href="#在指定的app里进行随机事件" class="headerlink" title="在指定的app里进行随机事件"></a>在指定的app里进行随机事件</h6><blockquote><p>adb shell monkey -p 包名 100</p></blockquote><h6 id="在指定的activity内进行随机事件"><a href="#在指定的activity内进行随机事件" class="headerlink" title="在指定的activity内进行随机事件"></a>在指定的activity内进行随机事件</h6><blockquote><p>adb shell monkey -c activity 100</p></blockquote><h4 id="遇到特殊事件处理"><a href="#遇到特殊事件处理" class="headerlink" title="遇到特殊事件处理"></a>遇到特殊事件处理</h4><h6 id="遇到crash后继续事件"><a href="#遇到crash后继续事件" class="headerlink" title="遇到crash后继续事件"></a>遇到crash后继续事件</h6><blockquote><p>adb shell monkey –ignore-crashes</p></blockquote><h6 id="遇到超时时继续事件"><a href="#遇到超时时继续事件" class="headerlink" title="遇到超时时继续事件"></a>遇到超时时继续事件</h6><blockquote><p>adb shell monkey –ignore-timouts</p></blockquote><h6 id="遇到权限不足时继续事件"><a href="#遇到权限不足时继续事件" class="headerlink" title="遇到权限不足时继续事件"></a>遇到权限不足时继续事件</h6><blockquote><p>adb shell monkey –ignore-security-exceptions</p></blockquote><h4 id="Moneky-API"><a href="#Moneky-API" class="headerlink" title="Moneky API"></a>Moneky API</h4><h6 id="启动应用的activity"><a href="#启动应用的activity" class="headerlink" title="启动应用的activity"></a>启动应用的activity</h6><blockquote><p>LaunchActivity(pkg_name,cl_name)<br><em>参数：包名，启动的activity</em></p></blockquote><h6 id="模拟一次点击事件"><a href="#模拟一次点击事件" class="headerlink" title="模拟一次点击事件"></a>模拟一次点击事件</h6><blockquote><p>Tap(x,y,tapDuration)<br><em>参数：x,y坐标。tap持续时间(省)</em></p></blockquote><h6 id="设置睡眠时间"><a href="#设置睡眠时间" class="headerlink" title="设置睡眠时间"></a>设置睡眠时间</h6><blockquote><p>UserWait(sleepTime)</p></blockquote><h6 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h6><blockquote><p>DispatchPress(keyName)</p></blockquote><h6 id="输入字符串"><a href="#输入字符串" class="headerlink" title="输入字符串"></a>输入字符串</h6><blockquote><p>DispatchString(input)</p></blockquote><h6 id="打开关闭软键盘"><a href="#打开关闭软键盘" class="headerlink" title="打开关闭软键盘"></a>打开关闭软键盘</h6><blockquote><p>DispatchFlip(true/false)</p></blockquote><h6 id="长按事件"><a href="#长按事件" class="headerlink" title="长按事件"></a>长按事件</h6><blockquote><p>PressAndHold(x,y,pressDuration)</p></blockquote><h6 id="缩放手势"><a href="#缩放手势" class="headerlink" title="缩放手势"></a>缩放手势</h6><blockquote><p>Drag(xStart,yStart,xend,yend,x2Start,y2Start,x2end,y2end,stepCount)</p></blockquote><h6 id="运行1次脚本"><a href="#运行1次脚本" class="headerlink" title="运行1次脚本"></a>运行1次脚本</h6><blockquote><p>adb shell monkey -f /sdcard/test.txt -v -v 1<br><em>脚本是用Moneky API编写的脚本,文件后缀理论不限一般为.txt,脚本需放在测试手机内</em></p></blockquote><h4 id="log保存"><a href="#log保存" class="headerlink" title="log保存"></a>log保存</h4><blockquote><p>adb shell monkey 100 1&gt;d:\log.log 2&gt;d:\error.log<br><em>1标准流在log.log 文件中,2错误流在error.log中</em></p></blockquote><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><blockquote><blockquote><p>adb shell monkey -p com.tal.kaoyan –pct-touch 40 –pct-motion 25 –pct-appswitch 10 –pct-rotation 5 -s 1666 –throttle 400 –ignore-crashes –ignore-timeouts -v -v 200<br><em>在考研APP里以触控25%手势40%启动10%旋转5%的概率和seed为1666为条件执行200次随机事件，并且每个事件隔0.4秒执行一次，在执行中遇到crash和权限问题都跳过继续执行之后的事件</em></p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ADB&quot;&gt;&lt;a href=&quot;#ADB&quot; class=&quot;headerlink&quot; title=&quot;ADB&quot;&gt;&lt;/a&gt;ADB&lt;/h1&gt;&lt;h4 id=&quot;截图&quot;&gt;&lt;a href=&quot;#截图&quot; class=&quot;headerlink&quot; title=&quot;截图&quot;&gt;&lt;/a&gt;截图&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;adb shell screencap /sdcard/wangdoujia.png&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://www.tomtony.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://www.tomtony.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="adb" scheme="https://www.tomtony.top/tags/adb/"/>
    
      <category term="aapt" scheme="https://www.tomtony.top/tags/aapt/"/>
    
      <category term="Moneky" scheme="https://www.tomtony.top/tags/Moneky/"/>
    
  </entry>
  
  <entry>
    <title>架设简单的服务器</title>
    <link href="https://www.tomtony.top/2018/10/12/%E6%9E%B6%E8%AE%BE%E7%AE%80%E5%8D%95%E7%9A%84%E7%BD%91%E7%AB%99%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://www.tomtony.top/2018/10/12/架设简单的网站服务器/</id>
    <published>2018-10-12T09:26:00.000Z</published>
    <updated>2018-10-17T01:44:08.390Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在虚拟机中的Centos-7上架设搭建简单的网站"><a href="#在虚拟机中的Centos-7上架设搭建简单的网站" class="headerlink" title="在虚拟机中的Centos 7上架设搭建简单的网站"></a>在虚拟机中的Centos 7上架设搭建简单的网站</h1><h2 id="1-安装Apache服务"><a href="#1-安装Apache服务" class="headerlink" title="1. 安装Apache服务"></a>1. 安装Apache服务</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y httpd</span><br></pre></td></tr></table></figure></blockquote><a id="more"></a><h2 id="2-启动Apache服务"><a href="#2-启动Apache服务" class="headerlink" title="2. 启动Apache服务"></a>2. 启动Apache服务</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure></blockquote><h2 id="3-在“-var-www-”下创建web文件夹"><a href="#3-在“-var-www-”下创建web文件夹" class="headerlink" title="3. 在“/var/www/”下创建web文件夹"></a>3. 在“/var/www/”下创建web文件夹</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/www/tony</span><br></pre></td></tr></table></figure></blockquote><h2 id="4-更改配置文件，设置基于域名的虚拟主机"><a href="#4-更改配置文件，设置基于域名的虚拟主机" class="headerlink" title="4. 更改配置文件，设置基于域名的虚拟主机"></a>4. 更改配置文件，设置基于域名的虚拟主机</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf </span><br><span class="line">NameVirtualHost 192.168.31.41:80  _ip地址为虚拟机地址_</span><br><span class="line">&lt;VirtualHost 192.168.31.41:80&gt;</span><br><span class="line">DocumentRoot /var/www/tony  _目标指向第三步创建的文件夹_</span><br><span class="line">ServerName tony.text.com  _网址，如果你有的话_</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="5-重新开启apache服务"><a href="#5-重新开启apache服务" class="headerlink" title="5. 重新开启apache服务"></a>5. 重新开启apache服务</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  restart httpd</span><br></pre></td></tr></table></figure></blockquote><h2 id="6-将服务设置为开机自启"><a href="#6-将服务设置为开机自启" class="headerlink" title="6. 将服务设置为开机自启"></a>6. 将服务设置为开机自启</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在虚拟机中的Centos-7上架设搭建简单的网站&quot;&gt;&lt;a href=&quot;#在虚拟机中的Centos-7上架设搭建简单的网站&quot; class=&quot;headerlink&quot; title=&quot;在虚拟机中的Centos 7上架设搭建简单的网站&quot;&gt;&lt;/a&gt;在虚拟机中的Centos 7上架设搭建简单的网站&lt;/h1&gt;&lt;h2 id=&quot;1-安装Apache服务&quot;&gt;&lt;a href=&quot;#1-安装Apache服务&quot; class=&quot;headerlink&quot; title=&quot;1. 安装Apache服务&quot;&gt;&lt;/a&gt;1. 安装Apache服务&lt;/h2&gt;&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y httpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.tomtony.top/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.tomtony.top/tags/linux/"/>
    
      <category term="centos" scheme="https://www.tomtony.top/tags/centos/"/>
    
  </entry>
  
</feed>
